<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20251.25.0313.2002                               -->
<workbook original-version='18.1' source-build='2025.1.0 (20251.25.0313.2002)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CascadingFilters />
    <CascadingFiltersHamburgerUI />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <_.fcp.PatternedLineMarks.true...PatternedLineMarks />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Select Month ' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;August&quot;'>
        <calculation class='tableau' formula='&quot;August&quot;' />
        <members>
          <member value='&quot;January&quot;' />
          <member value='&quot;February&quot;' />
          <member value='&quot;March&quot;' />
          <member value='&quot;April&quot;' />
          <member value='&quot;May&quot;' />
          <member value='&quot;June&quot;' />
          <member value='&quot;July&quot;' />
          <member value='&quot;August&quot;' />
          <member value='&quot;September&quot;' />
          <member value='&quot;October&quot;' />
          <member value='&quot;November&quot;' />
          <member value='&quot;December&quot;' />
        </members>
      </column>
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Parameter 1]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;January &quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;January&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;February&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;March&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
    </datasource>
    <datasource caption='Climate Change Data' inline='true' name='federated.1abbkwf12dhwoo100k8ox0incbjb' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Climate Change Data' name='textscan.0pztgbg01npi1p190ek0p1bli3xu'>
            <connection class='textscan' directory='C:/Users/BALU LOHITH REDDY/Downloads' filename='Climate Change Data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0pztgbg01npi1p190ek0p1bli3xu' name='Climate Change Data.csv' table='[Climate Change Data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Record ID' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='City' ordinal='3' />
            <column datatype='real' name='Temperature' ordinal='4' />
            <column datatype='integer' name='Humidity' ordinal='5' />
            <column datatype='real' name='Precipitation' ordinal='6' />
            <column datatype='integer' name='Air Quality Index' ordinal='7' />
            <column datatype='string' name='Extreme Weather Events' ordinal='8' />
            <column datatype='string' name='Climate Classification' ordinal='9' />
            <column datatype='string' name='Climate Zone' ordinal='10' />
            <column datatype='string' name='Biome Type' ordinal='11' />
            <column datatype='real' name='Heat Index' ordinal='12' />
            <column datatype='real' name='Wind Speed' ordinal='13' />
            <column datatype='string' name='Wind Direction' ordinal='14' />
            <column datatype='string' name='Season' ordinal='15' />
            <column datatype='integer' name='Population Exposure' ordinal='16' />
            <column datatype='real' name='Economic Impact Estimate' ordinal='17' />
            <column datatype='integer' name='Infrastructure Vulnerability Score' ordinal='18' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Climate Change Data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Record ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Record ID]</local-name>
            <parent-name>[Climate Change Data.csv]</parent-name>
            <remote-alias>Record ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Climate Change Data.csv_F12CCBF2FAAA4AE5BBC3AD0E7ECA8246]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Climate Change Data.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Climate Change Data.csv_F12CCBF2FAAA4AE5BBC3AD0E7ECA8246]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Climate Change Data.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Climate Change Data.csv_F12CCBF2FAAA4AE5BBC3AD0E7ECA8246]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Climate Change Data.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Climate Change Data.csv_F12CCBF2FAAA4AE5BBC3AD0E7ECA8246]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Temperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Temperature]</local-name>
            <parent-name>[Climate Change Data.csv]</parent-name>
            <remote-alias>Temperature</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Climate Change Data.csv_F12CCBF2FAAA4AE5BBC3AD0E7ECA8246]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Humidity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Humidity]</local-name>
            <parent-name>[Climate Change Data.csv]</parent-name>
            <remote-alias>Humidity</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Climate Change Data.csv_F12CCBF2FAAA4AE5BBC3AD0E7ECA8246]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Precipitation</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Precipitation]</local-name>
            <parent-name>[Climate Change Data.csv]</parent-name>
            <remote-alias>Precipitation</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Climate Change Data.csv_F12CCBF2FAAA4AE5BBC3AD0E7ECA8246]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Air Quality Index</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Air Quality Index]</local-name>
            <parent-name>[Climate Change Data.csv]</parent-name>
            <remote-alias>Air Quality Index</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Climate Change Data.csv_F12CCBF2FAAA4AE5BBC3AD0E7ECA8246]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Extreme Weather Events</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Extreme Weather Events]</local-name>
            <parent-name>[Climate Change Data.csv]</parent-name>
            <remote-alias>Extreme Weather Events</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Climate Change Data.csv_F12CCBF2FAAA4AE5BBC3AD0E7ECA8246]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Climate Classification</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Climate Classification]</local-name>
            <parent-name>[Climate Change Data.csv]</parent-name>
            <remote-alias>Climate Classification</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Climate Change Data.csv_F12CCBF2FAAA4AE5BBC3AD0E7ECA8246]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Climate Zone</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Climate Zone]</local-name>
            <parent-name>[Climate Change Data.csv]</parent-name>
            <remote-alias>Climate Zone</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Climate Change Data.csv_F12CCBF2FAAA4AE5BBC3AD0E7ECA8246]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Biome Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Biome Type]</local-name>
            <parent-name>[Climate Change Data.csv]</parent-name>
            <remote-alias>Biome Type</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Climate Change Data.csv_F12CCBF2FAAA4AE5BBC3AD0E7ECA8246]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Heat Index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Heat Index]</local-name>
            <parent-name>[Climate Change Data.csv]</parent-name>
            <remote-alias>Heat Index</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Climate Change Data.csv_F12CCBF2FAAA4AE5BBC3AD0E7ECA8246]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wind Speed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Wind Speed]</local-name>
            <parent-name>[Climate Change Data.csv]</parent-name>
            <remote-alias>Wind Speed</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Climate Change Data.csv_F12CCBF2FAAA4AE5BBC3AD0E7ECA8246]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wind Direction</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Wind Direction]</local-name>
            <parent-name>[Climate Change Data.csv]</parent-name>
            <remote-alias>Wind Direction</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Climate Change Data.csv_F12CCBF2FAAA4AE5BBC3AD0E7ECA8246]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Season</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Season]</local-name>
            <parent-name>[Climate Change Data.csv]</parent-name>
            <remote-alias>Season</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Climate Change Data.csv_F12CCBF2FAAA4AE5BBC3AD0E7ECA8246]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population Exposure</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population Exposure]</local-name>
            <parent-name>[Climate Change Data.csv]</parent-name>
            <remote-alias>Population Exposure</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Climate Change Data.csv_F12CCBF2FAAA4AE5BBC3AD0E7ECA8246]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Economic Impact Estimate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Economic Impact Estimate]</local-name>
            <parent-name>[Climate Change Data.csv]</parent-name>
            <remote-alias>Economic Impact Estimate</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Climate Change Data.csv_F12CCBF2FAAA4AE5BBC3AD0E7ECA8246]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Infrastructure Vulnerability Score</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Infrastructure Vulnerability Score]</local-name>
            <parent-name>[Climate Change Data.csv]</parent-name>
            <remote-alias>Infrastructure Vulnerability Score</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Climate Change Data.csv_F12CCBF2FAAA4AE5BBC3AD0E7ECA8246]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='% Difference  AQI' datatype='real' name='[% Difference EWE  (copy)_1170091545317445643]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(AVG([Calculation_1170091545315459081])-AVG([Previous Month EWE (copy)_1170091545316884490]))/AVG([Previous Month EWE (copy)_1170091545316884490])' />
      </column>
      <column caption='% Difference TEMP' datatype='real' name='[% Difference PCI (copy)_2068841146639802373]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(AVG([Calculation_2068841146436657155])-AVG([Calculation_2068841146637885444]))/AVG([Calculation_2068841146637885444])' />
      </column>
      <column caption='% Difference TEMP Variability ' datatype='real' name='[% Difference TEMP (copy)_1173469246210658307]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(AVG([Current Month Temperature  (copy)_1173469246208573441])-AVG([Previous Month Temperature (copy)_1173469246209179650]))/AVG([Previous Month Temperature (copy)_1173469246209179650])' />
      </column>
      <column caption='Good Percentage AQI ' datatype='string' name='[Bad Percentage AQI (copy)_1170091545321873422]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF ABS([% Difference EWE  (copy)_1170091545317445643]) &lt; 0.03 THEN&#13;&#10;    IF [% Difference EWE  (copy)_1170091545317445643] &gt; 0 THEN&#13;&#10;        &quot;â–² &quot; + STR(ROUND([% Difference EWE  (copy)_1170091545317445643] * 100, 2)) + &quot;%&quot;&#13;&#10;    ELSE&#13;&#10;        &quot;â–¼ &quot; + STR(ROUND(ABS([% Difference EWE  (copy)_1170091545317445643] * 100), 2)) + &quot;%&quot;&#13;&#10;    END&#13;&#10;ELSE&#13;&#10;    &quot;&quot;&#13;&#10;END' />
      </column>
      <column caption='Bad Percentage PCI' datatype='string' name='[Bad Percentage AQI (copy)_2068841146409336833]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_1570630437568487427] &lt;= -0.02 OR  [Calculation_1570630437568487427] &gt;= 0.02 THEN&#13;&#10;    IF [% Difference EWE  (copy)_1170091545317445643] &gt; 0 THEN&#13;&#10;        &quot;â–² &quot; + STR(ROUND([Calculation_1570630437568487427] * 100, 2)) + &quot;%&quot;&#13;&#10;    ELSE&#13;&#10;        &quot;â–¼ &quot; + STR(ROUND(ABS([Calculation_1570630437568487427] * 100), 2)) + &quot;%&quot;&#13;&#10;    END&#13;&#10;ELSE&#13;&#10;    &quot;&quot;&#13;&#10;END' />
      </column>
      <column caption='Bad Percentage TEMP VAR' datatype='string' name='[Bad Percentage TEMP (copy)_1173469246220693508]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [% Difference TEMP (copy)_1173469246210658307] &gt;= 0.01&#13;&#10;THEN &#13;&#10;IF [% Difference TEMP (copy)_1173469246210658307] &gt; 0 &#13;&#10;THEN &quot;â–² &quot; + STR(ROUND([% Difference TEMP (copy)_1173469246210658307] * 100, 2)) + &quot;%&quot; &#13;&#10;ELSE &quot;â–¼ &quot; + STR(ROUND([% Difference TEMP (copy)_1173469246210658307] * 100, 2)) + &quot;%&quot; &#13;&#10;END &#13;&#10;ELSE &#13;&#10;&quot;&quot; &#13;&#10;END' />
      </column>
      <column caption='Good  Percentage TEMP ' datatype='string' name='[Bad Percentage TEMP (copy)_2068841146640683015]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [% Difference PCI (copy)_2068841146639802373] &gt; -0.03 AND  [% Difference PCI (copy)_2068841146639802373] &lt;0.03 &#13;&#10;THEN &#13;&#10;IF [% Difference PCI (copy)_2068841146639802373] &gt; 0 &#13;&#10;THEN &quot;â–² &quot; + STR(ROUND([% Difference PCI (copy)_2068841146639802373] * 100, 2)) + &quot;%&quot; &#13;&#10;ELSE &quot;â–¼ &quot; + STR(ROUND([% Difference PCI (copy)_2068841146639802373] * 100, 2)) + &quot;%&quot; &#13;&#10;END &#13;&#10;ELSE &#13;&#10;&quot;&quot; &#13;&#10;END' />
      </column>
      <column caption='Count of Weather Events ' datatype='integer' name='[Calculation_1170091545209331712]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if[Extreme Weather Events] &lt;&gt; &quot;None&quot; THEN 1 ELSE 0 &#13;&#10;END' />
      </column>
      <column caption='Current Month Weather Events ' datatype='integer' name='[Calculation_1170091545210150913]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATENAME(&apos;month&apos;, [Date]) = [Parameters].[Parameter 1] THEN [Calculation_1170091545209331712] &#13;&#10;END' />
      </column>
      <column caption='Previous Month EWE' datatype='integer' name='[Calculation_1170091545222074372]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATENAME(&apos;month&apos;, [Date]) =&#13;&#10;case [Parameters].[Parameter 1]    &#13;&#10;WHEN &apos;January&apos; THEN &apos;December&apos;&#13;&#10;WHEN &apos;February&apos; THEN &apos;January&apos;&#13;&#10;WHEN &apos;March&apos; THEN &apos;February&apos;&#13;&#10;WHEN &apos;April&apos; THEN &apos;March&apos;&#13;&#10;WHEN &apos;May&apos; THEN &apos;April&apos;&#13;&#10;WHEN &apos;June&apos; THEN &apos;May&apos;&#13;&#10;WHEN &apos;July&apos; THEN &apos;June&apos;&#13;&#10;WHEN &apos;August&apos; THEN &apos;July&apos;&#13;&#10;WHEN &apos;September&apos; THEN &apos;August&apos;&#13;&#10;WHEN &apos;October&apos; THEN &apos;September&apos;&#13;&#10;WHEN &apos;November&apos; THEN &apos;October&apos;&#13;&#10;WHEN &apos;December&apos; THEN &apos;November&apos;&#13;&#10;END&#13;&#10;THEN [Calculation_1170091545209331712]&#13;&#10;END' />
      </column>
      <column caption='% Difference EWE ' datatype='real' name='[Calculation_1170091545299161093]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Calculation_1170091545210150913])-SUM([Calculation_1170091545222074372]))/SUM([Calculation_1170091545222074372])' />
      </column>
      <column caption='Bad Percentage EWE' datatype='string' name='[Calculation_1170091545305280518]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_1170091545299161093] &gt; 0 THEN &#13;&#10;    &quot;â–² &quot; + STR(ROUND([Calculation_1170091545299161093] * 100, 2)) + &quot;%&quot;&#13;&#10;ELSE &#13;&#10;    &quot;&quot;&#13;&#10;END' />
      </column>
      <column caption='Good Percentage EWE' datatype='string' name='[Calculation_1170091545307086855]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_1170091545299161093] &lt; 0 THEN &#13;&#10;    &quot;â–¼ &quot; + STR(ROUND(ABS([Calculation_1170091545299161093] * 100), 2)) + &quot;%&quot;&#13;&#10;ELSE &#13;&#10;    &quot;&quot;&#13;&#10;END' />
      </column>
      <column caption='Avg AQI' datatype='real' name='[Calculation_1170091545308565512]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='avg([Air Quality Index])' />
      </column>
      <column caption='Current Month AQI' datatype='real' name='[Calculation_1170091545315459081]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATENAME(&apos;month&apos;, [Date]) = [Parameters].[Parameter 1]THEN&#13;&#10;{FIXED DATENAME(&apos;month&apos;, [Date]): AVG([Air Quality Index])}&#13;&#10;END' />
      </column>
      <column caption='Bad Percentage AQI' datatype='string' name='[Calculation_1170091545319485453]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF ABS([% Difference EWE  (copy)_1170091545317445643]) &gt;= 0.03 THEN&#13;&#10;    IF [% Difference EWE  (copy)_1170091545317445643] &gt; 0 THEN&#13;&#10;        &quot;â–² &quot; + STR(ROUND([% Difference EWE  (copy)_1170091545317445643] * 100, 2)) + &quot;%&quot;&#13;&#10;    ELSE&#13;&#10;        &quot;â–¼ &quot; + STR(ROUND(ABS([% Difference EWE  (copy)_1170091545317445643] * 100), 2)) + &quot;%&quot;&#13;&#10;    END&#13;&#10;ELSE&#13;&#10;    &quot;&quot;&#13;&#10;END' />
      </column>
      <column caption='Temperature Variability ' datatype='real' name='[Calculation_1173469246208176128]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='STDEV([Temperature])' />
      </column>
      <column caption='Avg TEMP' datatype='real' name='[Calculation_1173469246238244871]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([Temperature])' />
      </column>
      <column caption='current Month PCI' datatype='real' name='[Calculation_1570630437559517184]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATENAME(&apos;month&apos;, [Date]) = [Parameters].[Parameter 1] THEN&#13;&#10;&#13;&#10;{FIXED DATENAME(&apos;month&apos;, [Date]) : AVG([Precipitation])}&#13;&#10;&#13;&#10;END' />
      </column>
      <column caption='Previous Month PCI' datatype='real' name='[Calculation_1570630437563150338]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATENAME(&apos;month&apos;, [Date]) =&#13;&#10;case [Parameters].[Parameter 1]&#13;&#10;WHEN &apos;January&apos; THEN &apos;December&apos;&#13;&#10;WHEN &apos;February&apos; THEN &apos;January&apos;&#13;&#10;WHEN &apos;March&apos; THEN &apos;February&apos;&#13;&#10;WHEN &apos;April&apos; THEN &apos;March&apos;&#13;&#10;WHEN &apos;May&apos; THEN &apos;April&apos;&#13;&#10;WHEN &apos;June&apos; THEN &apos;May&apos;&#13;&#10;WHEN &apos;July&apos; THEN &apos;June&apos;&#13;&#10;WHEN &apos;August&apos; THEN &apos;July&apos;&#13;&#10;WHEN &apos;September&apos; THEN &apos;August&apos;&#13;&#10;WHEN &apos;October&apos; THEN &apos;September&apos;&#13;&#10;WHEN &apos;November&apos; THEN &apos;October&apos;&#13;&#10;WHEN &apos;December&apos; THEN &apos;November&apos;&#13;&#10;END&#13;&#10;THEN {FIXED DATENAME(&apos;month&apos;, [Date]) : AVG([Precipitation])}&#13;&#10;END' />
      </column>
      <column caption='% Difference PCI' datatype='real' name='[Calculation_1570630437568487427]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(AVG([Calculation_1570630437559517184])-AVG([Calculation_1570630437563150338]))/AVG([Calculation_1570630437563150338])' />
      </column>
      <column caption='Current Month Temperature ' datatype='real' name='[Calculation_2068841146436657155]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATENAME(&apos;month&apos;, [Date]) = [Parameters].[Parameter 1] THEN &#13;&#10;{FIXED DATENAME(&apos;month&apos;, [Date]) : AVG([Temperature])}&#13;&#10;END' />
      </column>
      <column caption='Previous Month Temperature' datatype='real' name='[Calculation_2068841146637885444]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATENAME(&apos;month&apos;, [Date]) = &#13;&#10;case [Parameters].[Parameter 1]&#13;&#10; &#13;&#10;WHEN &apos;January&apos; THEN &apos;December&apos; &#13;&#10;WHEN &apos;February&apos; THEN &apos;January&apos; &#13;&#10;WHEN &apos;March&apos; THEN &apos;February&apos; &#13;&#10;WHEN &apos;April&apos; THEN &apos;March&apos; &#13;&#10;WHEN &apos;May&apos; THEN &apos;April&apos; &#13;&#10;WHEN &apos;June&apos; THEN &apos;May&apos; &#13;&#10;WHEN &apos;July&apos; THEN &apos;June&apos; &#13;&#10;WHEN &apos;August&apos; THEN &apos;July&apos; &#13;&#10;WHEN &apos;September&apos; THEN &apos;August&apos; &#13;&#10;WHEN &apos;October&apos; THEN &apos;September&apos; &#13;&#10;WHEN &apos;November&apos; THEN &apos;October&apos; &#13;&#10;WHEN &apos;December&apos; THEN &apos;November&apos; &#13;&#10;END &#13;&#10;THEN {FIXED DATENAME(&apos;month&apos;, [Date]) : AVG([Temperature])} &#13;&#10;END' />
      </column>
      <column caption='Bad Percentage TEMP' datatype='string' name='[Calculation_2068841146640363526]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [% Difference PCI (copy)_2068841146639802373] &gt;= 0.03 OR [% Difference PCI (copy)_2068841146639802373] &lt;= -0.03&#13;&#10;THEN &#13;&#10;IF [% Difference PCI (copy)_2068841146639802373] &gt; 0 &#13;&#10;THEN &quot;â–² &quot; + STR(ROUND([% Difference PCI (copy)_2068841146639802373] * 100, 2)) + &quot;%&quot; &#13;&#10;ELSE &quot;â–¼ &quot; + STR(ROUND([% Difference PCI (copy)_2068841146639802373] * 100, 2)) + &quot;%&quot; &#13;&#10;END &#13;&#10;ELSE &#13;&#10;&quot;&quot; &#13;&#10;END' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Climate Zone]' role='dimension' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Current Month Temperature  Variability' datatype='real' name='[Current Month Temperature  (copy)_1173469246208573441]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATENAME(&apos;month&apos;, [Date]) = [Parameters].[Parameter 1] THEN &#13;&#10;{FIXED DATENAME(&apos;month&apos;, [Date]) : STDEV([Temperature])}&#13;&#10;END' />
      </column>
      <column caption='Good  Percentage TEMP  VAR' datatype='string' name='[Good  Percentage TEMP  (copy)_1173469246221680645]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [% Difference TEMP (copy)_1173469246210658307] &lt; 0.01&#13;&#10;THEN &#13;&#10;IF [% Difference PCI (copy)_2068841146639802373] &gt; 0 &#13;&#10;THEN &quot;â–² &quot; + STR(ROUND([% Difference PCI (copy)_2068841146639802373] * 100, 2)) + &quot;%&quot; &#13;&#10;ELSE &quot;â–¼ &quot; + STR(ROUND([% Difference PCI (copy)_2068841146639802373] * 100, 2)) + &quot;%&quot; &#13;&#10;END &#13;&#10;ELSE &#13;&#10;&quot;&quot; &#13;&#10;END' />
      </column>
      <column caption='Good Percentage PCI' datatype='string' name='[Good Percentage AQI  (copy)_2068841146410987522]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_1570630437568487427] &gt; -0.02 AND [Calculation_1570630437568487427] &lt; 0.02 THEN&#13;&#10;    IF [Calculation_1570630437568487427] &gt; 0 THEN&#13;&#10;        &quot;â–² &quot; + STR(ROUND([Calculation_1570630437568487427] * 100, 2)) + &quot;%&quot;&#13;&#10;    ELSE&#13;&#10;        &quot;â–¼ &quot; + STR(ROUND(ABS([Calculation_1570630437568487427] * 100), 2)) + &quot;%&quot;&#13;&#10;    END&#13;&#10;ELSE&#13;&#10;    &quot;&quot;&#13;&#10;END' />
      </column>
      <column caption='Previous Month AQI' datatype='real' name='[Previous Month EWE (copy)_1170091545316884490]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATENAME(&apos;month&apos;, [Date]) =&#13;&#10;case [Parameters].[Parameter 1]    &#13;&#10;WHEN &apos;January&apos; THEN &apos;December&apos;&#13;&#10;WHEN &apos;February&apos; THEN &apos;January&apos;&#13;&#10;WHEN &apos;March&apos; THEN &apos;February&apos;&#13;&#10;WHEN &apos;April&apos; THEN &apos;March&apos;&#13;&#10;WHEN &apos;May&apos; THEN &apos;April&apos;&#13;&#10;WHEN &apos;June&apos; THEN &apos;May&apos;&#13;&#10;WHEN &apos;July&apos; THEN &apos;June&apos;&#13;&#10;WHEN &apos;August&apos; THEN &apos;July&apos;&#13;&#10;WHEN &apos;September&apos; THEN &apos;August&apos;&#13;&#10;WHEN &apos;October&apos; THEN &apos;September&apos;&#13;&#10;WHEN &apos;November&apos; THEN &apos;October&apos;&#13;&#10;WHEN &apos;December&apos; THEN &apos;November&apos;&#13;&#10;END&#13;&#10;THEN {FIXED DATENAME(&apos;month&apos;, [Date]): AVG([Air Quality Index])}&#13;&#10;END' />
      </column>
      <column caption='Previous Month TEMP variability ' datatype='real' name='[Previous Month Temperature (copy)_1173469246209179650]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATENAME(&apos;month&apos;, [Date]) = &#13;&#10;case [Parameters].[Parameter 1]&#13;&#10; &#13;&#10;WHEN &apos;January&apos; THEN &apos;December&apos; &#13;&#10;WHEN &apos;February&apos; THEN &apos;January&apos; &#13;&#10;WHEN &apos;March&apos; THEN &apos;February&apos; &#13;&#10;WHEN &apos;April&apos; THEN &apos;March&apos; &#13;&#10;WHEN &apos;May&apos; THEN &apos;April&apos; &#13;&#10;WHEN &apos;June&apos; THEN &apos;May&apos; &#13;&#10;WHEN &apos;July&apos; THEN &apos;June&apos; &#13;&#10;WHEN &apos;August&apos; THEN &apos;July&apos; &#13;&#10;WHEN &apos;September&apos; THEN &apos;August&apos; &#13;&#10;WHEN &apos;October&apos; THEN &apos;September&apos; &#13;&#10;WHEN &apos;November&apos; THEN &apos;October&apos; &#13;&#10;WHEN &apos;December&apos; THEN &apos;November&apos; &#13;&#10;END &#13;&#10;THEN {FIXED DATENAME(&apos;month&apos;, [Date]) : STDEV([Temperature])} &#13;&#10;END' />
      </column>
      <column caption='Climate Change Data.csv' datatype='table' name='[__tableau_internal_object_id__].[Climate Change Data.csv_F12CCBF2FAAA4AE5BBC3AD0E7ECA8246]' role='measure' type='quantitative' />
      <column-instance column='[Climate Zone]' derivation='None' name='[none:Climate Zone:nk]' pivot='key' type='nominal' />
      <drill-paths>
        <drill-path name='Country, City'>
          <field>[Country]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/BALU LOHITH REDDY/Documents/My Tableau Repository/Datasources/Climate Change Data.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='04/16/2025 12:55:37 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Climate Change Data' increment-value='%null%' refresh-type='create' rows-inserted='15351' timestamp-start='2025-04-16 12:55:36.682' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Record ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Record ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Record ID</remote-alias>
              <ordinal>0</ordinal>
              <family>Climate Change Data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>15351</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Climate Change Data.csv_F12CCBF2FAAA4AE5BBC3AD0E7ECA8246]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>1</ordinal>
              <family>Climate Change Data.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1312</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Climate Change Data.csv_F12CCBF2FAAA4AE5BBC3AD0E7ECA8246]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>2</ordinal>
              <family>Climate Change Data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Climate Change Data.csv_F12CCBF2FAAA4AE5BBC3AD0E7ECA8246]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>3</ordinal>
              <family>Climate Change Data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>24</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Climate Change Data.csv_F12CCBF2FAAA4AE5BBC3AD0E7ECA8246]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Temperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Temperature]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Temperature</remote-alias>
              <ordinal>4</ordinal>
              <family>Climate Change Data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>932</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Climate Change Data.csv_F12CCBF2FAAA4AE5BBC3AD0E7ECA8246]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Humidity</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Humidity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Humidity</remote-alias>
              <ordinal>5</ordinal>
              <family>Climate Change Data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>91</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Climate Change Data.csv_F12CCBF2FAAA4AE5BBC3AD0E7ECA8246]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Precipitation</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Precipitation]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Precipitation</remote-alias>
              <ordinal>6</ordinal>
              <family>Climate Change Data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2835</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Climate Change Data.csv_F12CCBF2FAAA4AE5BBC3AD0E7ECA8246]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Air Quality Index</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Air Quality Index]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Air Quality Index</remote-alias>
              <ordinal>7</ordinal>
              <family>Climate Change Data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>825</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Climate Change Data.csv_F12CCBF2FAAA4AE5BBC3AD0E7ECA8246]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Extreme Weather Events</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Extreme Weather Events]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Extreme Weather Events</remote-alias>
              <ordinal>8</ordinal>
              <family>Climate Change Data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Climate Change Data.csv_F12CCBF2FAAA4AE5BBC3AD0E7ECA8246]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Climate Classification</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Climate Classification]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Climate Classification</remote-alias>
              <ordinal>9</ordinal>
              <family>Climate Change Data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Climate Change Data.csv_F12CCBF2FAAA4AE5BBC3AD0E7ECA8246]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Climate Zone</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Climate Zone]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Climate Zone</remote-alias>
              <ordinal>10</ordinal>
              <family>Climate Change Data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Climate Change Data.csv_F12CCBF2FAAA4AE5BBC3AD0E7ECA8246]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Biome Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Biome Type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Biome Type</remote-alias>
              <ordinal>11</ordinal>
              <family>Climate Change Data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Climate Change Data.csv_F12CCBF2FAAA4AE5BBC3AD0E7ECA8246]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Heat Index</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Heat Index]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Heat Index</remote-alias>
              <ordinal>12</ordinal>
              <family>Climate Change Data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>974</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Climate Change Data.csv_F12CCBF2FAAA4AE5BBC3AD0E7ECA8246]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Wind Speed</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Wind Speed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Wind Speed</remote-alias>
              <ordinal>13</ordinal>
              <family>Climate Change Data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>539</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Climate Change Data.csv_F12CCBF2FAAA4AE5BBC3AD0E7ECA8246]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Wind Direction</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Wind Direction]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Wind Direction</remote-alias>
              <ordinal>14</ordinal>
              <family>Climate Change Data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Climate Change Data.csv_F12CCBF2FAAA4AE5BBC3AD0E7ECA8246]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Season</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Season]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Season</remote-alias>
              <ordinal>15</ordinal>
              <family>Climate Change Data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Climate Change Data.csv_F12CCBF2FAAA4AE5BBC3AD0E7ECA8246]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population Exposure</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population Exposure]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population Exposure</remote-alias>
              <ordinal>16</ordinal>
              <family>Climate Change Data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15351</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Climate Change Data.csv_F12CCBF2FAAA4AE5BBC3AD0E7ECA8246]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Economic Impact Estimate</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Economic Impact Estimate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Economic Impact Estimate</remote-alias>
              <ordinal>17</ordinal>
              <family>Climate Change Data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15351</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Climate Change Data.csv_F12CCBF2FAAA4AE5BBC3AD0E7ECA8246]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Infrastructure Vulnerability Score</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Infrastructure Vulnerability Score]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Infrastructure Vulnerability Score</remote-alias>
              <ordinal>18</ordinal>
              <family>Climate Change Data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Climate Change Data.csv_F12CCBF2FAAA4AE5BBC3AD0E7ECA8246]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Climate Zone:nk]' type='palette'>
            <map to='#9a6a96'>
              <bucket>&quot;Temperate&quot;</bucket>
            </map>
            <map to='#c48fb2'>
              <bucket>&quot;Tropical&quot;</bucket>
            </map>
            <map to='#eac1df'>
              <bucket>&quot;Arid&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select Month ' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;August&quot;'>
          <calculation class='tableau' formula='&quot;August&quot;' />
        </column>
      </datasource-dependencies>
      <object-graph>
        <objects>
          <object caption='Climate Change Data.csv' id='Climate Change Data.csv_F12CCBF2FAAA4AE5BBC3AD0E7ECA8246'>
            <properties context=''>
              <relation connection='textscan.0pztgbg01npi1p190ek0p1bli3xu' name='Climate Change Data.csv' table='[Climate Change Data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='Record ID' ordinal='0' />
                  <column datatype='date' name='Date' ordinal='1' />
                  <column datatype='string' name='Country' ordinal='2' />
                  <column datatype='string' name='City' ordinal='3' />
                  <column datatype='real' name='Temperature' ordinal='4' />
                  <column datatype='integer' name='Humidity' ordinal='5' />
                  <column datatype='real' name='Precipitation' ordinal='6' />
                  <column datatype='integer' name='Air Quality Index' ordinal='7' />
                  <column datatype='string' name='Extreme Weather Events' ordinal='8' />
                  <column datatype='string' name='Climate Classification' ordinal='9' />
                  <column datatype='string' name='Climate Zone' ordinal='10' />
                  <column datatype='string' name='Biome Type' ordinal='11' />
                  <column datatype='real' name='Heat Index' ordinal='12' />
                  <column datatype='real' name='Wind Speed' ordinal='13' />
                  <column datatype='string' name='Wind Direction' ordinal='14' />
                  <column datatype='string' name='Season' ordinal='15' />
                  <column datatype='integer' name='Population Exposure' ordinal='16' />
                  <column datatype='real' name='Economic Impact Estimate' ordinal='17' />
                  <column datatype='integer' name='Infrastructure Vulnerability Score' ordinal='18' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.1abbkwf12dhwoo100k8ox0incbjb'>
      <datasources>
        <datasource caption='Climate Change Data' name='federated.1abbkwf12dhwoo100k8ox0incbjb' />
      </datasources>
      <datasource-dependencies datasource='federated.1abbkwf12dhwoo100k8ox0incbjb'>
        <column datatype='string' name='[Biome Type]' role='dimension' type='nominal' />
        <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
        <column datatype='string' name='[Climate Classification]' role='dimension' type='nominal' />
        <column datatype='string' name='[Climate Zone]' role='dimension' type='nominal' />
        <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
        <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
        <column-instance column='[Biome Type]' derivation='None' name='[none:Biome Type:nk]' pivot='key' type='nominal' />
        <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
        <column-instance column='[Climate Classification]' derivation='None' name='[none:Climate Classification:nk]' pivot='key' type='nominal' />
        <column-instance column='[Climate Zone]' derivation='None' name='[none:Climate Zone:nk]' pivot='key' type='nominal' />
        <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
        <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[mn:Date:ok]' context='true'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[mn:Date:ok]' member='1' />
          <groupfilter function='member' level='[mn:Date:ok]' member='2' />
          <groupfilter function='member' level='[mn:Date:ok]' member='3' />
          <groupfilter function='member' level='[mn:Date:ok]' member='4' />
          <groupfilter function='member' level='[mn:Date:ok]' member='5' />
          <groupfilter function='member' level='[mn:Date:ok]' member='6' />
          <groupfilter function='member' level='[mn:Date:ok]' member='7' />
          <groupfilter function='member' level='[mn:Date:ok]' member='8' />
          <groupfilter function='member' level='[mn:Date:ok]' member='9' />
          <groupfilter function='member' level='[mn:Date:ok]' member='10' />
          <groupfilter function='member' level='[mn:Date:ok]' member='11' />
          <groupfilter function='member' level='[mn:Date:ok]' member='12' />
        </groupfilter>
      </filter>
      <filter class='categorical' column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Biome Type:nk]' context='true'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:Biome Type:nk]' member='&quot;Desert&quot;' />
          <groupfilter function='member' level='[none:Biome Type:nk]' member='&quot;Forest&quot;' />
          <groupfilter function='member' level='[none:Biome Type:nk]' member='&quot;Grassland&quot;' />
          <groupfilter function='member' level='[none:Biome Type:nk]' member='&quot;Tundra&quot;' />
          <groupfilter function='member' level='[none:Biome Type:nk]' member='&quot;Wetland&quot;' />
        </groupfilter>
      </filter>
      <filter class='categorical' column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:City:nk]' context='true'>
        <groupfilter function='union' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:City:nk]' member='%null%' />
          <groupfilter function='member' level='[none:City:nk]' member='&quot;Bangalore&quot;' />
          <groupfilter function='member' level='[none:City:nk]' member='&quot;Berlin&quot;' />
          <groupfilter function='member' level='[none:City:nk]' member='&quot;Brasilia&quot;' />
          <groupfilter function='member' level='[none:City:nk]' member='&quot;Cape Town&quot;' />
          <groupfilter function='member' level='[none:City:nk]' member='&quot;Chicago&quot;' />
          <groupfilter function='member' level='[none:City:nk]' member='&quot;Delhi&quot;' />
          <groupfilter function='member' level='[none:City:nk]' member='&quot;Durban&quot;' />
          <groupfilter function='member' level='[none:City:nk]' member='&quot;Hamburg&quot;' />
          <groupfilter function='member' level='[none:City:nk]' member='&quot;Johannesburg&quot;' />
          <groupfilter function='member' level='[none:City:nk]' member='&quot;Los Angeles&quot;' />
          <groupfilter function='member' level='[none:City:nk]' member='&quot;Melbourne&quot;' />
          <groupfilter function='member' level='[none:City:nk]' member='&quot;Montreal&quot;' />
          <groupfilter function='member' level='[none:City:nk]' member='&quot;Mumbai&quot;' />
          <groupfilter function='member' level='[none:City:nk]' member='&quot;Munich&quot;' />
          <groupfilter function='member' level='[none:City:nk]' member='&quot;New York&quot;' />
          <groupfilter function='member' level='[none:City:nk]' member='&quot;Perth&quot;' />
          <groupfilter function='member' level='[none:City:nk]' member='&quot;Rio de Janeiro&quot;' />
          <groupfilter function='member' level='[none:City:nk]' member='&quot;Sao Paulo&quot;' />
          <groupfilter function='member' level='[none:City:nk]' member='&quot;Sydney&quot;' />
          <groupfilter function='member' level='[none:City:nk]' member='&quot;Toronto&quot;' />
          <groupfilter function='member' level='[none:City:nk]' member='&quot;Vancouver&quot;' />
        </groupfilter>
      </filter>
      <filter class='categorical' column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Climate Classification:nk]' context='true'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:Climate Classification:nk]' member='&quot;Koeppen-A&quot;' />
          <groupfilter function='member' level='[none:Climate Classification:nk]' member='&quot;Koeppen-B&quot;' />
          <groupfilter function='member' level='[none:Climate Classification:nk]' member='&quot;Koeppen-C&quot;' />
          <groupfilter function='member' level='[none:Climate Classification:nk]' member='&quot;Koeppen-D&quot;' />
        </groupfilter>
      </filter>
      <filter class='categorical' column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Climate Zone:nk]' context='true'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:Climate Zone:nk]' member='&quot;Arid&quot;' />
          <groupfilter function='member' level='[none:Climate Zone:nk]' member='&quot;Temperate&quot;' />
          <groupfilter function='member' level='[none:Climate Zone:nk]' member='&quot;Tropical&quot;' />
        </groupfilter>
      </filter>
      <filter class='categorical' column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Country:nk]' context='true'>
        <groupfilter function='union' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:Country:nk]' member='&quot;Australia&quot;' />
          <groupfilter function='member' level='[none:Country:nk]' member='&quot;Brazil&quot;' />
          <groupfilter function='member' level='[none:Country:nk]' member='&quot;Canada&quot;' />
          <groupfilter function='member' level='[none:Country:nk]' member='&quot;Germany&quot;' />
          <groupfilter function='member' level='[none:Country:nk]' member='&quot;India&quot;' />
          <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Africa&quot;' />
          <groupfilter function='member' level='[none:Country:nk]' member='&quot;USA&quot;' />
        </groupfilter>
      </filter>
      <filter class='categorical' column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[yr:Date:ok]' context='true'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[yr:Date:ok]' member='2024' />
          <groupfilter function='member' level='[yr:Date:ok]' member='2025' />
        </groupfilter>
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='AQI'>
      <table>
        <view>
          <datasources>
            <datasource caption='Climate Change Data' name='federated.1abbkwf12dhwoo100k8ox0incbjb' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Month ' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;August&quot;'>
              <calculation class='tableau' formula='&quot;August&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1abbkwf12dhwoo100k8ox0incbjb'>
            <column caption='% Difference  AQI' datatype='real' name='[% Difference EWE  (copy)_1170091545317445643]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(AVG([Calculation_1170091545315459081])-AVG([Previous Month EWE (copy)_1170091545316884490]))/AVG([Previous Month EWE (copy)_1170091545316884490])' />
            </column>
            <column datatype='integer' name='[Air Quality Index]' role='measure' type='quantitative' />
            <column caption='Good Percentage AQI ' datatype='string' name='[Bad Percentage AQI (copy)_1170091545321873422]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF ABS([% Difference EWE  (copy)_1170091545317445643]) &lt; 0.03 THEN&#13;&#10;    IF [% Difference EWE  (copy)_1170091545317445643] &gt; 0 THEN&#13;&#10;        &quot;â–² &quot; + STR(ROUND([% Difference EWE  (copy)_1170091545317445643] * 100, 2)) + &quot;%&quot;&#13;&#10;    ELSE&#13;&#10;        &quot;â–¼ &quot; + STR(ROUND(ABS([% Difference EWE  (copy)_1170091545317445643] * 100), 2)) + &quot;%&quot;&#13;&#10;    END&#13;&#10;ELSE&#13;&#10;    &quot;&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Biome Type]' role='dimension' type='nominal' />
            <column caption='Current Month AQI' datatype='real' name='[Calculation_1170091545315459081]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATENAME(&apos;month&apos;, [Date]) = [Parameters].[Parameter 1]THEN&#13;&#10;{FIXED DATENAME(&apos;month&apos;, [Date]): AVG([Air Quality Index])}&#13;&#10;END' />
            </column>
            <column caption='Bad Percentage AQI' datatype='string' name='[Calculation_1170091545319485453]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF ABS([% Difference EWE  (copy)_1170091545317445643]) &gt;= 0.03 THEN&#13;&#10;    IF [% Difference EWE  (copy)_1170091545317445643] &gt; 0 THEN&#13;&#10;        &quot;â–² &quot; + STR(ROUND([% Difference EWE  (copy)_1170091545317445643] * 100, 2)) + &quot;%&quot;&#13;&#10;    ELSE&#13;&#10;        &quot;â–¼ &quot; + STR(ROUND(ABS([% Difference EWE  (copy)_1170091545317445643] * 100), 2)) + &quot;%&quot;&#13;&#10;    END&#13;&#10;ELSE&#13;&#10;    &quot;&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Climate Classification]' role='dimension' type='nominal' />
            <column datatype='string' name='[Climate Zone]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Previous Month AQI' datatype='real' name='[Previous Month EWE (copy)_1170091545316884490]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATENAME(&apos;month&apos;, [Date]) =&#13;&#10;case [Parameters].[Parameter 1]    &#13;&#10;WHEN &apos;January&apos; THEN &apos;December&apos;&#13;&#10;WHEN &apos;February&apos; THEN &apos;January&apos;&#13;&#10;WHEN &apos;March&apos; THEN &apos;February&apos;&#13;&#10;WHEN &apos;April&apos; THEN &apos;March&apos;&#13;&#10;WHEN &apos;May&apos; THEN &apos;April&apos;&#13;&#10;WHEN &apos;June&apos; THEN &apos;May&apos;&#13;&#10;WHEN &apos;July&apos; THEN &apos;June&apos;&#13;&#10;WHEN &apos;August&apos; THEN &apos;July&apos;&#13;&#10;WHEN &apos;September&apos; THEN &apos;August&apos;&#13;&#10;WHEN &apos;October&apos; THEN &apos;September&apos;&#13;&#10;WHEN &apos;November&apos; THEN &apos;October&apos;&#13;&#10;WHEN &apos;December&apos; THEN &apos;November&apos;&#13;&#10;END&#13;&#10;THEN {FIXED DATENAME(&apos;month&apos;, [Date]): AVG([Air Quality Index])}&#13;&#10;END' />
            </column>
            <column-instance column='[Calculation_1170091545315459081]' derivation='Avg' name='[avg:Calculation_1170091545315459081:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Biome Type]' derivation='None' name='[none:Biome Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Climate Classification]' derivation='None' name='[none:Climate Classification:nk]' pivot='key' type='nominal' />
            <column-instance column='[Climate Zone]' derivation='None' name='[none:Climate Zone:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Bad Percentage AQI (copy)_1170091545321873422]' derivation='User' name='[usr:Bad Percentage AQI (copy)_1170091545321873422:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1170091545319485453]' derivation='User' name='[usr:Calculation_1170091545319485453:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[mn:Date:ok]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Biome Type:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:City:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Climate Classification:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Climate Zone:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Country:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[yr:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[avg:Calculation_1170091545315459081:qk]' />
              <text column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Calculation_1170091545319485453:nk]' />
              <text column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Bad Percentage AQI (copy)_1170091545321873422:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontname='Tableau Bold' fontsize='12'>Air Quality Index </run>
                <run>Ã†&#10;</run>
                <run bold='true' fontcolor='#00eaea' fontsize='20'><![CDATA[<[federated.1abbkwf12dhwoo100k8ox0incbjb].[avg:Calculation_1170091545315459081:qk]>]]></run>
                <run>Ã†&#10;</run>
                <run fontcolor='#d60000' fontname='Tableau Semibold' fontsize='12'><![CDATA[<[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Calculation_1170091545319485453:nk]>]]></run>
                <run fontcolor='#00ad00' fontname='Tableau Semibold' fontsize='12'><![CDATA[<[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Bad Percentage AQI (copy)_1170091545321873422:nk]> ]]></run>
                <run fontname='Tableau Semibold' fontsize='12'>vs Last Month</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{2283AC3F-472B-4153-BB45-824014DDB281}' />
    </worksheet>
    <worksheet name='EWE'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>EWE</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Climate Change Data' name='federated.1abbkwf12dhwoo100k8ox0incbjb' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Month ' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;August&quot;'>
              <calculation class='tableau' formula='&quot;August&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1abbkwf12dhwoo100k8ox0incbjb'>
            <column datatype='string' name='[Biome Type]' role='dimension' type='nominal' />
            <column caption='Count of Weather Events ' datatype='integer' name='[Calculation_1170091545209331712]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if[Extreme Weather Events] &lt;&gt; &quot;None&quot; THEN 1 ELSE 0 &#13;&#10;END' />
            </column>
            <column caption='Current Month Weather Events ' datatype='integer' name='[Calculation_1170091545210150913]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATENAME(&apos;month&apos;, [Date]) = [Parameters].[Parameter 1] THEN [Calculation_1170091545209331712] &#13;&#10;END' />
            </column>
            <column caption='Previous Month EWE' datatype='integer' name='[Calculation_1170091545222074372]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATENAME(&apos;month&apos;, [Date]) =&#13;&#10;case [Parameters].[Parameter 1]    &#13;&#10;WHEN &apos;January&apos; THEN &apos;December&apos;&#13;&#10;WHEN &apos;February&apos; THEN &apos;January&apos;&#13;&#10;WHEN &apos;March&apos; THEN &apos;February&apos;&#13;&#10;WHEN &apos;April&apos; THEN &apos;March&apos;&#13;&#10;WHEN &apos;May&apos; THEN &apos;April&apos;&#13;&#10;WHEN &apos;June&apos; THEN &apos;May&apos;&#13;&#10;WHEN &apos;July&apos; THEN &apos;June&apos;&#13;&#10;WHEN &apos;August&apos; THEN &apos;July&apos;&#13;&#10;WHEN &apos;September&apos; THEN &apos;August&apos;&#13;&#10;WHEN &apos;October&apos; THEN &apos;September&apos;&#13;&#10;WHEN &apos;November&apos; THEN &apos;October&apos;&#13;&#10;WHEN &apos;December&apos; THEN &apos;November&apos;&#13;&#10;END&#13;&#10;THEN [Calculation_1170091545209331712]&#13;&#10;END' />
            </column>
            <column caption='% Difference EWE ' datatype='real' name='[Calculation_1170091545299161093]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Calculation_1170091545210150913])-SUM([Calculation_1170091545222074372]))/SUM([Calculation_1170091545222074372])' />
            </column>
            <column caption='Bad Percentage EWE' datatype='string' name='[Calculation_1170091545305280518]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1170091545299161093] &gt; 0 THEN &#13;&#10;    &quot;â–² &quot; + STR(ROUND([Calculation_1170091545299161093] * 100, 2)) + &quot;%&quot;&#13;&#10;ELSE &#13;&#10;    &quot;&quot;&#13;&#10;END' />
            </column>
            <column caption='Good Percentage EWE' datatype='string' name='[Calculation_1170091545307086855]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1170091545299161093] &lt; 0 THEN &#13;&#10;    &quot;â–¼ &quot; + STR(ROUND(ABS([Calculation_1170091545299161093] * 100), 2)) + &quot;%&quot;&#13;&#10;ELSE &#13;&#10;    &quot;&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Climate Classification]' role='dimension' type='nominal' />
            <column datatype='string' name='[Climate Zone]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Extreme Weather Events]' role='dimension' type='nominal' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Biome Type]' derivation='None' name='[none:Biome Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Climate Classification]' derivation='None' name='[none:Climate Classification:nk]' pivot='key' type='nominal' />
            <column-instance column='[Climate Zone]' derivation='None' name='[none:Climate Zone:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1170091545210150913]' derivation='Sum' name='[sum:Calculation_1170091545210150913:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1170091545305280518]' derivation='User' name='[usr:Calculation_1170091545305280518:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1170091545307086855]' derivation='User' name='[usr:Calculation_1170091545307086855:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[sum:Calculation_1170091545210150913:qk]' included-values='in-range' />
          <slices>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[mn:Date:ok]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Biome Type:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:City:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Climate Classification:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Climate Zone:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Country:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[yr:Date:ok]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[sum:Calculation_1170091545210150913:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='59' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[sum:Calculation_1170091545210150913:qk]' />
              <text column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Calculation_1170091545305280518:nk]' />
              <text column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Calculation_1170091545307086855:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontname='Tableau Bold' fontsize='12'>Extreme Weather Events</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#00eaea' fontname='Tableau Semibold' fontsize='20'><![CDATA[<[federated.1abbkwf12dhwoo100k8ox0incbjb].[sum:Calculation_1170091545210150913:qk]>]]></run>
                <run>Ã†&#10;</run>
                <run fontcolor='#d60000' fontname='Tableau Semibold' fontsize='12'><![CDATA[<[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Calculation_1170091545305280518:nk]>]]></run>
                <run fontcolor='#00ad00' fontname='Tableau Semibold' fontsize='12'><![CDATA[<[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Calculation_1170091545307086855:nk]> ]]></run>
                <run fontname='Tableau Semibold' fontsize='12'>vs Last Month</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{D506A561-1191-4276-B5B8-9A384E31FD2B}' />
    </worksheet>
    <worksheet name='EWE by Season '>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Bold' fontsize='9'>Extreme Weather Events By Seasons</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Climate Change Data' name='federated.1abbkwf12dhwoo100k8ox0incbjb' />
          </datasources>
          <datasource-dependencies datasource='federated.1abbkwf12dhwoo100k8ox0incbjb'>
            <column datatype='string' name='[Biome Type]' role='dimension' type='nominal' />
            <column caption='Count of Weather Events ' datatype='integer' name='[Calculation_1170091545209331712]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if[Extreme Weather Events] &lt;&gt; &quot;None&quot; THEN 1 ELSE 0 &#13;&#10;END' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Climate Classification]' role='dimension' type='nominal' />
            <column datatype='string' name='[Climate Zone]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Extreme Weather Events]' role='dimension' type='nominal' />
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Biome Type]' derivation='None' name='[none:Biome Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Climate Classification]' derivation='None' name='[none:Climate Classification:nk]' pivot='key' type='nominal' />
            <column-instance column='[Climate Zone]' derivation='None' name='[none:Climate Zone:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1170091545209331712]' derivation='Sum' name='[sum:Calculation_1170091545209331712:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[mn:Date:ok]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Biome Type:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:City:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Climate Classification:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Climate Zone:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Country:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[yr:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[sum:Calculation_1170091545209331712:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontname='Tableau Bold' fontsize='8'>&lt;</run>
                <run fontname='Tableau Bold' fontsize='8'>[federated.1abbkwf12dhwoo100k8ox0incbjb].[sum:Calculation_1170091545209331712:qk]</run>
                <run fontname='Tableau Bold' fontsize='8'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#250886' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1abbkwf12dhwoo100k8ox0incbjb].[sum:Calculation_1170091545209331712:qk]</rows>
        <cols>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Season:nk]</cols>
      </table>
      <simple-id uuid='{0CBA016E-D2BE-4B3A-80B9-C71C6AF6858D}' />
    </worksheet>
    <worksheet name='Monthly Temperature Trends '>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Bold' fontsize='9'>Monthly Temperature Trends</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Climate Change Data' name='federated.1abbkwf12dhwoo100k8ox0incbjb' />
          </datasources>
          <datasource-dependencies datasource='federated.1abbkwf12dhwoo100k8ox0incbjb'>
            <column datatype='string' name='[Biome Type]' role='dimension' type='nominal' />
            <column caption='Avg TEMP' datatype='real' name='[Calculation_1173469246238244871]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Temperature])' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Climate Classification]' role='dimension' type='nominal' />
            <column datatype='string' name='[Climate Zone]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Temperature]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Biome Type]' derivation='None' name='[none:Biome Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Climate Classification]' derivation='None' name='[none:Climate Classification:nk]' pivot='key' type='nominal' />
            <column-instance column='[Climate Zone]' derivation='None' name='[none:Climate Zone:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1173469246238244871]' derivation='User' name='[usr:Calculation_1173469246238244871:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[mn:Date:ok]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Biome Type:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:City:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Climate Classification:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Climate Zone:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Country:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[yr:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Calculation_1173469246238244871:qk]' field-type='quantitative' max='19.25403225806452' min='15.0' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='1' field='[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Calculation_1173469246238244871:qk]' field-type='quantitative' fold='true' max='19.25403225806452' min='15.0' range-type='fixed' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Calculation_1173469246238244871:qk]' scope='rows' value='false' />
            <format attr='display' class='1' field='[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Calculation_1173469246238244871:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Calculation_1173469246238244871:qk]' value='n#,##0.0&quot;Â°C&quot;;-#,##0.0&quot;Â°C&quot;' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='line-visibility' id='refline2' value='on' />
            <format attr='line-pattern-only' id='refline2' value='dashed' />
            <format attr='stroke-size' id='refline2' value='2' />
            <format attr='color' id='refline2' value='#000000' />
            <format attr='font-weight' id='refline2' value='bold' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <reference-line axis-column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Calculation_1173469246238244871:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Calculation_1173469246238244871:qk]' z-order='1' />
            <reference-line axis-column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Calculation_1173469246238244871:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Calculation_1173469246238244871:qk]' z-order='2' />
            <reference-line axis-column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Calculation_1173469246238244871:qk]' enable-instant-analytics='true' formula='average' id='refline2' label='Avg :  &lt;Value&gt;' label-type='custom' probability='95' scope='per-table' value-column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Calculation_1173469246238244871:qk]' z-order='3' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#9a00e7' />
                <format attr='mark-transparency' value='55' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='solid' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Calculation_1173469246238244871:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#9a00e7' />
                <format attr='mark-transparency' value='55' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='solid' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Calculation_1173469246238244871:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <text column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Calculation_1173469246238244871:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontname='Tableau Semibold'>&lt;</run>
                <run fontname='Tableau Semibold'>[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Calculation_1173469246238244871:qk]</run>
                <run fontname='Tableau Semibold'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#9a00e7' />
                <format attr='mark-transparency' value='255' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='solid' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Calculation_1173469246238244871:qk] + [federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Calculation_1173469246238244871:qk])</rows>
        <cols>[federated.1abbkwf12dhwoo100k8ox0incbjb].[mn:Date:ok]</cols>
      </table>
      <simple-id uuid='{7ACEEDCA-F1B9-48E2-8CD7-E1581601D70C}' />
    </worksheet>
    <worksheet name='PCI'>
      <table>
        <view>
          <datasources>
            <datasource caption='Climate Change Data' name='federated.1abbkwf12dhwoo100k8ox0incbjb' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Month ' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;August&quot;'>
              <calculation class='tableau' formula='&quot;August&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1abbkwf12dhwoo100k8ox0incbjb'>
            <column caption='% Difference  AQI' datatype='real' name='[% Difference EWE  (copy)_1170091545317445643]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(AVG([Calculation_1170091545315459081])-AVG([Previous Month EWE (copy)_1170091545316884490]))/AVG([Previous Month EWE (copy)_1170091545316884490])' />
            </column>
            <column datatype='integer' name='[Air Quality Index]' role='measure' type='quantitative' />
            <column caption='Bad Percentage PCI' datatype='string' name='[Bad Percentage AQI (copy)_2068841146409336833]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1570630437568487427] &lt;= -0.02 OR  [Calculation_1570630437568487427] &gt;= 0.02 THEN&#13;&#10;    IF [% Difference EWE  (copy)_1170091545317445643] &gt; 0 THEN&#13;&#10;        &quot;â–² &quot; + STR(ROUND([Calculation_1570630437568487427] * 100, 2)) + &quot;%&quot;&#13;&#10;    ELSE&#13;&#10;        &quot;â–¼ &quot; + STR(ROUND(ABS([Calculation_1570630437568487427] * 100), 2)) + &quot;%&quot;&#13;&#10;    END&#13;&#10;ELSE&#13;&#10;    &quot;&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Biome Type]' role='dimension' type='nominal' />
            <column caption='Current Month AQI' datatype='real' name='[Calculation_1170091545315459081]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATENAME(&apos;month&apos;, [Date]) = [Parameters].[Parameter 1]THEN&#13;&#10;{FIXED DATENAME(&apos;month&apos;, [Date]): AVG([Air Quality Index])}&#13;&#10;END' />
            </column>
            <column caption='current Month PCI' datatype='real' name='[Calculation_1570630437559517184]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATENAME(&apos;month&apos;, [Date]) = [Parameters].[Parameter 1] THEN&#13;&#10;&#13;&#10;{FIXED DATENAME(&apos;month&apos;, [Date]) : AVG([Precipitation])}&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Previous Month PCI' datatype='real' name='[Calculation_1570630437563150338]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATENAME(&apos;month&apos;, [Date]) =&#13;&#10;case [Parameters].[Parameter 1]&#13;&#10;WHEN &apos;January&apos; THEN &apos;December&apos;&#13;&#10;WHEN &apos;February&apos; THEN &apos;January&apos;&#13;&#10;WHEN &apos;March&apos; THEN &apos;February&apos;&#13;&#10;WHEN &apos;April&apos; THEN &apos;March&apos;&#13;&#10;WHEN &apos;May&apos; THEN &apos;April&apos;&#13;&#10;WHEN &apos;June&apos; THEN &apos;May&apos;&#13;&#10;WHEN &apos;July&apos; THEN &apos;June&apos;&#13;&#10;WHEN &apos;August&apos; THEN &apos;July&apos;&#13;&#10;WHEN &apos;September&apos; THEN &apos;August&apos;&#13;&#10;WHEN &apos;October&apos; THEN &apos;September&apos;&#13;&#10;WHEN &apos;November&apos; THEN &apos;October&apos;&#13;&#10;WHEN &apos;December&apos; THEN &apos;November&apos;&#13;&#10;END&#13;&#10;THEN {FIXED DATENAME(&apos;month&apos;, [Date]) : AVG([Precipitation])}&#13;&#10;END' />
            </column>
            <column caption='% Difference PCI' datatype='real' name='[Calculation_1570630437568487427]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(AVG([Calculation_1570630437559517184])-AVG([Calculation_1570630437563150338]))/AVG([Calculation_1570630437563150338])' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Climate Classification]' role='dimension' type='nominal' />
            <column datatype='string' name='[Climate Zone]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Good Percentage PCI' datatype='string' name='[Good Percentage AQI  (copy)_2068841146410987522]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1570630437568487427] &gt; -0.02 AND [Calculation_1570630437568487427] &lt; 0.02 THEN&#13;&#10;    IF [Calculation_1570630437568487427] &gt; 0 THEN&#13;&#10;        &quot;â–² &quot; + STR(ROUND([Calculation_1570630437568487427] * 100, 2)) + &quot;%&quot;&#13;&#10;    ELSE&#13;&#10;        &quot;â–¼ &quot; + STR(ROUND(ABS([Calculation_1570630437568487427] * 100), 2)) + &quot;%&quot;&#13;&#10;    END&#13;&#10;ELSE&#13;&#10;    &quot;&quot;&#13;&#10;END' />
            </column>
            <column datatype='real' name='[Precipitation]' role='measure' type='quantitative' />
            <column caption='Previous Month AQI' datatype='real' name='[Previous Month EWE (copy)_1170091545316884490]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATENAME(&apos;month&apos;, [Date]) =&#13;&#10;case [Parameters].[Parameter 1]    &#13;&#10;WHEN &apos;January&apos; THEN &apos;December&apos;&#13;&#10;WHEN &apos;February&apos; THEN &apos;January&apos;&#13;&#10;WHEN &apos;March&apos; THEN &apos;February&apos;&#13;&#10;WHEN &apos;April&apos; THEN &apos;March&apos;&#13;&#10;WHEN &apos;May&apos; THEN &apos;April&apos;&#13;&#10;WHEN &apos;June&apos; THEN &apos;May&apos;&#13;&#10;WHEN &apos;July&apos; THEN &apos;June&apos;&#13;&#10;WHEN &apos;August&apos; THEN &apos;July&apos;&#13;&#10;WHEN &apos;September&apos; THEN &apos;August&apos;&#13;&#10;WHEN &apos;October&apos; THEN &apos;September&apos;&#13;&#10;WHEN &apos;November&apos; THEN &apos;October&apos;&#13;&#10;WHEN &apos;December&apos; THEN &apos;November&apos;&#13;&#10;END&#13;&#10;THEN {FIXED DATENAME(&apos;month&apos;, [Date]): AVG([Air Quality Index])}&#13;&#10;END' />
            </column>
            <column-instance column='[Calculation_1570630437559517184]' derivation='Avg' name='[avg:Calculation_1570630437559517184:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Biome Type]' derivation='None' name='[none:Biome Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Climate Classification]' derivation='None' name='[none:Climate Classification:nk]' pivot='key' type='nominal' />
            <column-instance column='[Climate Zone]' derivation='None' name='[none:Climate Zone:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Bad Percentage AQI (copy)_2068841146409336833]' derivation='User' name='[usr:Bad Percentage AQI (copy)_2068841146409336833:nk]' pivot='key' type='nominal' />
            <column-instance column='[Good Percentage AQI  (copy)_2068841146410987522]' derivation='User' name='[usr:Good Percentage AQI  (copy)_2068841146410987522:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[mn:Date:ok]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Biome Type:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:City:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Climate Classification:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Climate Zone:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Country:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[yr:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1abbkwf12dhwoo100k8ox0incbjb].[avg:Calculation_1570630437559517184:qk]' value='n#,##0.0&quot;mm&quot;;-#,##0.0&quot;mm&quot;' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[avg:Calculation_1570630437559517184:qk]' />
              <text column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Bad Percentage AQI (copy)_2068841146409336833:nk]' />
              <text column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Good Percentage AQI  (copy)_2068841146410987522:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontname='Tableau Bold' fontsize='12'>Precipitation Intensity</run>
                <run>Ã†&#10;</run>
                <run bold='true' fontcolor='#00eaea' fontsize='20'><![CDATA[<[federated.1abbkwf12dhwoo100k8ox0incbjb].[avg:Calculation_1570630437559517184:qk]>]]></run>
                <run>Ã†&#10;</run>
                <run fontcolor='#d60000' fontname='Tableau Semibold' fontsize='12'><![CDATA[<[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Bad Percentage AQI (copy)_2068841146409336833:nk]>]]></run>
                <run fontcolor='#00ad00' fontname='Tableau Semibold' fontsize='12'><![CDATA[<[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Good Percentage AQI  (copy)_2068841146410987522:nk]> ]]></run>
                <run fontname='Tableau Semibold' fontsize='12'> vs Last Month</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F999E60A-832F-49D9-A927-9DCD86FD0EE3}' />
    </worksheet>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Climate Change Data' name='federated.1abbkwf12dhwoo100k8ox0incbjb' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Month ' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;August&quot;'>
              <calculation class='tableau' formula='&quot;August&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1abbkwf12dhwoo100k8ox0incbjb'>
            <column datatype='string' name='[Biome Type]' role='dimension' type='nominal' />
            <column caption='Count of Weather Events ' datatype='integer' name='[Calculation_1170091545209331712]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if[Extreme Weather Events] &lt;&gt; &quot;None&quot; THEN 1 ELSE 0 &#13;&#10;END' />
            </column>
            <column caption='Current Month Weather Events ' datatype='integer' name='[Calculation_1170091545210150913]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATENAME(&apos;month&apos;, [Date]) = [Parameters].[Parameter 1] THEN [Calculation_1170091545209331712] &#13;&#10;END' />
            </column>
            <column caption='Previous Month EWE' datatype='integer' name='[Calculation_1170091545222074372]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATENAME(&apos;month&apos;, [Date]) =&#13;&#10;case [Parameters].[Parameter 1]    &#13;&#10;WHEN &apos;January&apos; THEN &apos;December&apos;&#13;&#10;WHEN &apos;February&apos; THEN &apos;January&apos;&#13;&#10;WHEN &apos;March&apos; THEN &apos;February&apos;&#13;&#10;WHEN &apos;April&apos; THEN &apos;March&apos;&#13;&#10;WHEN &apos;May&apos; THEN &apos;April&apos;&#13;&#10;WHEN &apos;June&apos; THEN &apos;May&apos;&#13;&#10;WHEN &apos;July&apos; THEN &apos;June&apos;&#13;&#10;WHEN &apos;August&apos; THEN &apos;July&apos;&#13;&#10;WHEN &apos;September&apos; THEN &apos;August&apos;&#13;&#10;WHEN &apos;October&apos; THEN &apos;September&apos;&#13;&#10;WHEN &apos;November&apos; THEN &apos;October&apos;&#13;&#10;WHEN &apos;December&apos; THEN &apos;November&apos;&#13;&#10;END&#13;&#10;THEN [Calculation_1170091545209331712]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Climate Classification]' role='dimension' type='nominal' />
            <column datatype='string' name='[Climate Zone]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Extreme Weather Events]' role='dimension' type='nominal' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Biome Type]' derivation='None' name='[none:Biome Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Climate Classification]' derivation='None' name='[none:Climate Classification:nk]' pivot='key' type='nominal' />
            <column-instance column='[Climate Zone]' derivation='None' name='[none:Climate Zone:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1170091545209331712]' derivation='Sum' name='[sum:Calculation_1170091545209331712:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1170091545210150913]' derivation='Sum' name='[sum:Calculation_1170091545210150913:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1170091545222074372]' derivation='Sum' name='[sum:Calculation_1170091545222074372:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1abbkwf12dhwoo100k8ox0incbjb].[sum:Calculation_1170091545209331712:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1abbkwf12dhwoo100k8ox0incbjb].[sum:Calculation_1170091545210150913:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1abbkwf12dhwoo100k8ox0incbjb].[sum:Calculation_1170091545222074372:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1abbkwf12dhwoo100k8ox0incbjb].[sum:Calculation_1170091545209331712:qk]&quot;</bucket>
              <bucket>&quot;[federated.1abbkwf12dhwoo100k8ox0incbjb].[sum:Calculation_1170091545222074372:qk]&quot;</bucket>
              <bucket>&quot;[federated.1abbkwf12dhwoo100k8ox0incbjb].[sum:Calculation_1170091545210150913:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[mn:Date:ok]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Biome Type:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:City:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Climate Classification:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Climate Zone:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Country:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[yr:Date:ok]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1abbkwf12dhwoo100k8ox0incbjb].[:Measure Names]' value='186' />
            <format attr='height' field='[federated.1abbkwf12dhwoo100k8ox0incbjb].[mn:Date:ok]' value='20' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[Multiple Values]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.1abbkwf12dhwoo100k8ox0incbjb].[Multiple Values]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1abbkwf12dhwoo100k8ox0incbjb].[mn:Date:ok]</rows>
        <cols>[federated.1abbkwf12dhwoo100k8ox0incbjb].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{EF4C1C8E-7D97-4D83-A140-8DE0C28B7754}' />
    </worksheet>
    <worksheet name='Sheet 11'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Bold' fontsize='9'>Temperature By Country </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Climate Change Data' name='federated.1abbkwf12dhwoo100k8ox0incbjb' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1abbkwf12dhwoo100k8ox0incbjb'>
            <column datatype='string' name='[Biome Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Climate Classification]' role='dimension' type='nominal' />
            <column datatype='string' name='[Climate Zone]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Temperature]' role='measure' type='quantitative' />
            <column-instance column='[Temperature]' derivation='Avg' name='[avg:Temperature:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Biome Type]' derivation='None' name='[none:Biome Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Climate Classification]' derivation='None' name='[none:Climate Classification:nk]' pivot='key' type='nominal' />
            <column-instance column='[Climate Zone]' derivation='None' name='[none:Climate Zone:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[mn:Date:ok]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Biome Type:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:City:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Climate Classification:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Climate Zone:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Country:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[yr:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1abbkwf12dhwoo100k8ox0incbjb].[Longitude (generated)]' field-type='quantitative' max='36438108.905654818' min='8682506.0678828023' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1abbkwf12dhwoo100k8ox0incbjb].[Latitude (generated)]' field-type='quantitative' max='7978034.399443185' min='-1458870.6646610722' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1abbkwf12dhwoo100k8ox0incbjb].[avg:Temperature:qk]' value='n#,##0.0&quot;Â°C&quot;;-#,##0.0&quot;Â°C&quot;' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[avg:Temperature:qk]' />
              <text column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Country:nk]' />
              <lod column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Country:nk]' />
              <color column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[avg:Temperature:qk]' />
              <geometry column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[Geometry (generated)]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontname='Tableau Bold' fontsize='8'><![CDATA[<[federated.1abbkwf12dhwoo100k8ox0incbjb].[avg:Temperature:qk]>]]></run>
                <run>Ã†&#10;</run>
                <run fontname='Tableau Bold' fontsize='8'><![CDATA[<[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Country:nk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1abbkwf12dhwoo100k8ox0incbjb].[Latitude (generated)]</rows>
        <cols>[federated.1abbkwf12dhwoo100k8ox0incbjb].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{DFBB505E-4E63-43B9-8C40-76C050FAC9DA}' />
    </worksheet>
    <worksheet name='Sheet 14'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Bold' fontsize='9'>Extreme Weather Events By Climate Zone</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Climate Change Data' name='federated.1abbkwf12dhwoo100k8ox0incbjb' />
          </datasources>
          <datasource-dependencies datasource='federated.1abbkwf12dhwoo100k8ox0incbjb'>
            <column datatype='string' name='[Biome Type]' role='dimension' type='nominal' />
            <column caption='Count of Weather Events ' datatype='integer' name='[Calculation_1170091545209331712]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if[Extreme Weather Events] &lt;&gt; &quot;None&quot; THEN 1 ELSE 0 &#13;&#10;END' />
            </column>
            <column caption='AVG(0)' datatype='real' name='[Calculation_1173469246251692041]' role='measure' type='quantitative' user:unnamed='Sheet 14'>
              <calculation class='tableau' formula='AVG(0)' />
            </column>
            <column caption='AVG(0)' datatype='real' name='[Calculation_1173469246251884555]' role='measure' type='quantitative' user:unnamed='Sheet 14'>
              <calculation class='tableau' formula='AVG(0)' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Climate Classification]' role='dimension' type='nominal' />
            <column datatype='string' name='[Climate Zone]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Extreme Weather Events]' role='dimension' type='nominal' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Biome Type]' derivation='None' name='[none:Biome Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Climate Classification]' derivation='None' name='[none:Climate Classification:nk]' pivot='key' type='nominal' />
            <column-instance column='[Climate Zone]' derivation='None' name='[none:Climate Zone:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1170091545209331712]' derivation='Sum' name='[pcto:sum:Calculation_1170091545209331712:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_1170091545209331712]' derivation='Sum' name='[sum:Calculation_1170091545209331712:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1173469246251692041]' derivation='User' name='[usr:Calculation_1173469246251692041:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1173469246251884555]' derivation='User' name='[usr:Calculation_1173469246251884555:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[mn:Date:ok]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Biome Type:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:City:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Climate Classification:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Climate Zone:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Country:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[yr:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Calculation_1173469246251884555:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Calculation_1173469246251692041:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Calculation_1173469246251884555:qk]' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Calculation_1173469246251692041:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Climate Zone:nk]' />
              <wedge-size column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[sum:Calculation_1170091545209331712:qk]' />
              <text column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[pcto:sum:Calculation_1170091545209331712:qk]' />
              <text column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[sum:Calculation_1170091545209331712:qk]' />
              <text column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Climate Zone:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontname='Tableau Semibold'><![CDATA[<[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Climate Zone:nk]>]]></run>
                <run>Ã†&#10;</run>
                <run fontname='Tableau Semibold'><![CDATA[<[federated.1abbkwf12dhwoo100k8ox0incbjb].[pcto:sum:Calculation_1170091545209331712:qk]> | <[federated.1abbkwf12dhwoo100k8ox0incbjb].[sum:Calculation_1170091545209331712:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.2872927188873291' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Calculation_1173469246251884555:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4832596778869629' />
                <format attr='mark-color' value='#ffffff' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Calculation_1173469246251692041:qk] + [federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Calculation_1173469246251884555:qk])</rows>
        <cols />
      </table>
      <simple-id uuid='{B2926E69-6B6F-423E-8C4C-94E660F895FA}' />
    </worksheet>
    <worksheet name='Sheet 15'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Tableau Semibold' fontsize='9'>Economic Impact vs Infrastructure Vulunerability</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Climate Change Data' name='federated.1abbkwf12dhwoo100k8ox0incbjb' />
          </datasources>
          <datasource-dependencies datasource='federated.1abbkwf12dhwoo100k8ox0incbjb'>
            <column datatype='string' name='[Biome Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Climate Classification]' role='dimension' type='nominal' />
            <column datatype='string' name='[Climate Zone]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Economic Impact Estimate]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Infrastructure Vulnerability Score]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population Exposure]' role='measure' type='quantitative' />
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column-instance column='[Infrastructure Vulnerability Score]' derivation='Avg' name='[avg:Infrastructure Vulnerability Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Biome Type]' derivation='None' name='[none:Biome Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Climate Classification]' derivation='None' name='[none:Climate Classification:nk]' pivot='key' type='nominal' />
            <column-instance column='[Climate Zone]' derivation='None' name='[none:Climate Zone:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[Economic Impact Estimate]' derivation='Sum' name='[sum:Economic Impact Estimate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population Exposure]' derivation='Sum' name='[sum:Population Exposure:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Season:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Season:nk]' member='&quot;Autumn&quot;' />
              <groupfilter function='member' level='[none:Season:nk]' member='&quot;Spring&quot;' />
              <groupfilter function='member' level='[none:Season:nk]' member='&quot;Summer&quot;' />
              <groupfilter function='member' level='[none:Season:nk]' member='&quot;Winter&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[mn:Date:ok]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Biome Type:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:City:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Climate Classification:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Climate Zone:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Country:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[yr:Date:ok]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Season:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1abbkwf12dhwoo100k8ox0incbjb].[sum:Economic Impact Estimate:qk]' field-type='quantitative' max='38000000000.0' min='34000000000.0' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1abbkwf12dhwoo100k8ox0incbjb].[avg:Infrastructure Vulnerability Score:qk]' field-type='quantitative' max='6.0' min='5.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1abbkwf12dhwoo100k8ox0incbjb].[sum:Economic Impact Estimate:qk]' value='n#,##0,,,.0B;-#,##0,,,.0B' />
            <format attr='text-format' field='[federated.1abbkwf12dhwoo100k8ox0incbjb].[avg:Infrastructure Vulnerability Score:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#d6000067' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
            <format attr='stroke-size' id='refline0' value='2' />
            <format attr='text-format' id='refline0' value='n&quot;$&quot;#,##0,,,.0B;-&quot;$&quot;#,##0,,,.0B' />
            <format attr='font-weight' id='refline0' value='bold' />
            <format attr='color' id='refline0' value='#250886' />
            <format attr='font-family' id='refline0' value='Tableau Bold' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='line-visibility' id='refline1' value='on' />
            <format attr='line-pattern-only' id='refline1' value='dashed' />
            <format attr='stroke-color' id='refline1' value='#d600004b' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Country:nk]' value='Country'>
              <formatted-text>
                <run bold='true' fontcolor='#250886' fontname='Tableau Bold'>Country</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:City:nk]' value='City'>
              <formatted-text>
                <run fontcolor='#250886' fontname='Tableau Bold'>City</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Climate Classification:nk]' value='Climate Classification'>
              <formatted-text>
                <run fontcolor='#250886' fontname='Tableau Bold' fontsize='8'>Climate Classification</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Climate Zone:nk]' value='Climate Zone'>
              <formatted-text>
                <run fontcolor='#250886' fontname='Tableau Bold'>Climate Zone</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Season:nk]' value='Season'>
              <formatted-text>
                <run fontcolor='#250886' fontname='Tableau Bold'>Season</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Biome Type:nk]' value='Biome Type'>
              <formatted-text>
                <run fontcolor='#250886' fontname='Tableau Bold'>Biome Type</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1abbkwf12dhwoo100k8ox0incbjb].[yr:Date:ok]' value='Year of Date'>
              <formatted-text>
                <run fontcolor='#250886' fontname='Tableau Bold'>Year of Date</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1abbkwf12dhwoo100k8ox0incbjb].[mn:Date:ok]' value='Month of Date'>
              <formatted-text>
                <run fontcolor='#250886' fontname='Tableau Bold'>Month of Date</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Country:nk]' />
              <size column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[sum:Population Exposure:qk]' />
              <text column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Country:nk]' />
              <text column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:City:nk]' />
              <lod column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Country:nk]' />
              <lod column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:City:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[sum:Economic Impact Estimate:qk]' enable-instant-analytics='true' formula='average' id='refline0' label='Avg : &lt;Value&gt;' label-type='custom' probability='95' scope='per-table' value-column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[sum:Economic Impact Estimate:qk]' z-order='1' />
            <reference-line axis-column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[avg:Infrastructure Vulnerability Score:qk]' enable-instant-analytics='true' formula='average' id='refline1' label='Avgb :&lt;Value&gt;' label-type='custom' probability='95' scope='per-table' value-column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[avg:Infrastructure Vulnerability Score:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1abbkwf12dhwoo100k8ox0incbjb].[avg:Infrastructure Vulnerability Score:qk]</rows>
        <cols>[federated.1abbkwf12dhwoo100k8ox0incbjb].[sum:Economic Impact Estimate:qk]</cols>
      </table>
      <simple-id uuid='{27FF9D24-5C18-4D34-8B26-ECBA32D471E7}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='Climate Change Data' name='federated.1abbkwf12dhwoo100k8ox0incbjb' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Month ' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;August&quot;'>
              <calculation class='tableau' formula='&quot;August&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1abbkwf12dhwoo100k8ox0incbjb'>
            <column datatype='integer' name='[Air Quality Index]' role='measure' type='quantitative' />
            <column datatype='string' name='[Biome Type]' role='dimension' type='nominal' />
            <column caption='Avg AQI' datatype='real' name='[Calculation_1170091545308565512]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='avg([Air Quality Index])' />
            </column>
            <column caption='Current Month AQI' datatype='real' name='[Calculation_1170091545315459081]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATENAME(&apos;month&apos;, [Date]) = [Parameters].[Parameter 1]THEN&#13;&#10;{FIXED DATENAME(&apos;month&apos;, [Date]): AVG([Air Quality Index])}&#13;&#10;END' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Climate Classification]' role='dimension' type='nominal' />
            <column datatype='string' name='[Climate Zone]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Previous Month AQI' datatype='real' name='[Previous Month EWE (copy)_1170091545316884490]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATENAME(&apos;month&apos;, [Date]) =&#13;&#10;case [Parameters].[Parameter 1]    &#13;&#10;WHEN &apos;January&apos; THEN &apos;December&apos;&#13;&#10;WHEN &apos;February&apos; THEN &apos;January&apos;&#13;&#10;WHEN &apos;March&apos; THEN &apos;February&apos;&#13;&#10;WHEN &apos;April&apos; THEN &apos;March&apos;&#13;&#10;WHEN &apos;May&apos; THEN &apos;April&apos;&#13;&#10;WHEN &apos;June&apos; THEN &apos;May&apos;&#13;&#10;WHEN &apos;July&apos; THEN &apos;June&apos;&#13;&#10;WHEN &apos;August&apos; THEN &apos;July&apos;&#13;&#10;WHEN &apos;September&apos; THEN &apos;August&apos;&#13;&#10;WHEN &apos;October&apos; THEN &apos;September&apos;&#13;&#10;WHEN &apos;November&apos; THEN &apos;October&apos;&#13;&#10;WHEN &apos;December&apos; THEN &apos;November&apos;&#13;&#10;END&#13;&#10;THEN {FIXED DATENAME(&apos;month&apos;, [Date]): AVG([Air Quality Index])}&#13;&#10;END' />
            </column>
            <column-instance column='[Calculation_1170091545315459081]' derivation='Avg' name='[avg:Calculation_1170091545315459081:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Previous Month EWE (copy)_1170091545316884490]' derivation='Avg' name='[avg:Previous Month EWE (copy)_1170091545316884490:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Biome Type]' derivation='None' name='[none:Biome Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Climate Classification]' derivation='None' name='[none:Climate Classification:nk]' pivot='key' type='nominal' />
            <column-instance column='[Climate Zone]' derivation='None' name='[none:Climate Zone:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1170091545308565512]' derivation='User' name='[usr:Calculation_1170091545308565512:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Calculation_1170091545308565512:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1abbkwf12dhwoo100k8ox0incbjb].[avg:Previous Month EWE (copy)_1170091545316884490:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1abbkwf12dhwoo100k8ox0incbjb].[avg:Calculation_1170091545315459081:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Calculation_1170091545308565512:qk]&quot;</bucket>
              <bucket>&quot;[federated.1abbkwf12dhwoo100k8ox0incbjb].[avg:Previous Month EWE (copy)_1170091545316884490:qk]&quot;</bucket>
              <bucket>&quot;[federated.1abbkwf12dhwoo100k8ox0incbjb].[avg:Calculation_1170091545315459081:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Calculation_1170091545308565512:qk]' included-values='in-range' />
          <slices>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[mn:Date:ok]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Biome Type:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:City:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Climate Classification:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Climate Zone:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Country:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[yr:Date:ok]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[:Measure Names]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Calculation_1170091545308565512:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1abbkwf12dhwoo100k8ox0incbjb].[:Measure Names]' value='143' />
            <format attr='height' field='[federated.1abbkwf12dhwoo100k8ox0incbjb].[mn:Date:ok]' value='25' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1abbkwf12dhwoo100k8ox0incbjb].[mn:Date:ok]</rows>
        <cols>[federated.1abbkwf12dhwoo100k8ox0incbjb].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{CE2CA154-3A34-48DD-AF99-D0EC0FED89B1}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <table>
        <view>
          <datasources>
            <datasource caption='Climate Change Data' name='federated.1abbkwf12dhwoo100k8ox0incbjb' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Month ' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;August&quot;'>
              <calculation class='tableau' formula='&quot;August&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1abbkwf12dhwoo100k8ox0incbjb'>
            <column datatype='string' name='[Biome Type]' role='dimension' type='nominal' />
            <column caption='current Month PCI' datatype='real' name='[Calculation_1570630437559517184]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATENAME(&apos;month&apos;, [Date]) = [Parameters].[Parameter 1] THEN&#13;&#10;&#13;&#10;{FIXED DATENAME(&apos;month&apos;, [Date]) : AVG([Precipitation])}&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Previous Month PCI' datatype='real' name='[Calculation_1570630437563150338]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATENAME(&apos;month&apos;, [Date]) =&#13;&#10;case [Parameters].[Parameter 1]&#13;&#10;WHEN &apos;January&apos; THEN &apos;December&apos;&#13;&#10;WHEN &apos;February&apos; THEN &apos;January&apos;&#13;&#10;WHEN &apos;March&apos; THEN &apos;February&apos;&#13;&#10;WHEN &apos;April&apos; THEN &apos;March&apos;&#13;&#10;WHEN &apos;May&apos; THEN &apos;April&apos;&#13;&#10;WHEN &apos;June&apos; THEN &apos;May&apos;&#13;&#10;WHEN &apos;July&apos; THEN &apos;June&apos;&#13;&#10;WHEN &apos;August&apos; THEN &apos;July&apos;&#13;&#10;WHEN &apos;September&apos; THEN &apos;August&apos;&#13;&#10;WHEN &apos;October&apos; THEN &apos;September&apos;&#13;&#10;WHEN &apos;November&apos; THEN &apos;October&apos;&#13;&#10;WHEN &apos;December&apos; THEN &apos;November&apos;&#13;&#10;END&#13;&#10;THEN {FIXED DATENAME(&apos;month&apos;, [Date]) : AVG([Precipitation])}&#13;&#10;END' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Climate Classification]' role='dimension' type='nominal' />
            <column datatype='string' name='[Climate Zone]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Precipitation]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1570630437559517184]' derivation='Avg' name='[avg:Calculation_1570630437559517184:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1570630437563150338]' derivation='Avg' name='[avg:Calculation_1570630437563150338:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Precipitation]' derivation='Avg' name='[avg:Precipitation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Biome Type]' derivation='None' name='[none:Biome Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Climate Classification]' derivation='None' name='[none:Climate Classification:nk]' pivot='key' type='nominal' />
            <column-instance column='[Climate Zone]' derivation='None' name='[none:Climate Zone:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1abbkwf12dhwoo100k8ox0incbjb].[avg:Precipitation:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1abbkwf12dhwoo100k8ox0incbjb].[avg:Calculation_1570630437563150338:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1abbkwf12dhwoo100k8ox0incbjb].[avg:Calculation_1570630437559517184:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1abbkwf12dhwoo100k8ox0incbjb].[avg:Precipitation:qk]&quot;</bucket>
              <bucket>&quot;[federated.1abbkwf12dhwoo100k8ox0incbjb].[avg:Calculation_1570630437563150338:qk]&quot;</bucket>
              <bucket>&quot;[federated.1abbkwf12dhwoo100k8ox0incbjb].[avg:Calculation_1570630437559517184:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[mn:Date:ok]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Biome Type:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:City:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Climate Classification:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Climate Zone:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Country:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[yr:Date:ok]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1abbkwf12dhwoo100k8ox0incbjb].[:Measure Names]' value='107' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1abbkwf12dhwoo100k8ox0incbjb].[mn:Date:ok]</rows>
        <cols>[federated.1abbkwf12dhwoo100k8ox0incbjb].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{893ACF65-25C9-4022-89E7-38BCA2873CD1}' />
    </worksheet>
    <worksheet name='Sheet 8'>
      <table>
        <view>
          <datasources>
            <datasource caption='Climate Change Data' name='federated.1abbkwf12dhwoo100k8ox0incbjb' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Month ' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;August&quot;'>
              <calculation class='tableau' formula='&quot;August&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1abbkwf12dhwoo100k8ox0incbjb'>
            <column datatype='string' name='[Biome Type]' role='dimension' type='nominal' />
            <column caption='Current Month Temperature ' datatype='real' name='[Calculation_2068841146436657155]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATENAME(&apos;month&apos;, [Date]) = [Parameters].[Parameter 1] THEN &#13;&#10;{FIXED DATENAME(&apos;month&apos;, [Date]) : AVG([Temperature])}&#13;&#10;END' />
            </column>
            <column caption='Previous Month Temperature' datatype='real' name='[Calculation_2068841146637885444]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATENAME(&apos;month&apos;, [Date]) = &#13;&#10;case [Parameters].[Parameter 1]&#13;&#10; &#13;&#10;WHEN &apos;January&apos; THEN &apos;December&apos; &#13;&#10;WHEN &apos;February&apos; THEN &apos;January&apos; &#13;&#10;WHEN &apos;March&apos; THEN &apos;February&apos; &#13;&#10;WHEN &apos;April&apos; THEN &apos;March&apos; &#13;&#10;WHEN &apos;May&apos; THEN &apos;April&apos; &#13;&#10;WHEN &apos;June&apos; THEN &apos;May&apos; &#13;&#10;WHEN &apos;July&apos; THEN &apos;June&apos; &#13;&#10;WHEN &apos;August&apos; THEN &apos;July&apos; &#13;&#10;WHEN &apos;September&apos; THEN &apos;August&apos; &#13;&#10;WHEN &apos;October&apos; THEN &apos;September&apos; &#13;&#10;WHEN &apos;November&apos; THEN &apos;October&apos; &#13;&#10;WHEN &apos;December&apos; THEN &apos;November&apos; &#13;&#10;END &#13;&#10;THEN {FIXED DATENAME(&apos;month&apos;, [Date]) : AVG([Temperature])} &#13;&#10;END' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Climate Classification]' role='dimension' type='nominal' />
            <column datatype='string' name='[Climate Zone]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Temperature]' role='measure' type='quantitative' />
            <column-instance column='[Temperature]' derivation='Avg' name='[avg:Temperature:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Biome Type]' derivation='None' name='[none:Biome Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Climate Classification]' derivation='None' name='[none:Climate Classification:nk]' pivot='key' type='nominal' />
            <column-instance column='[Climate Zone]' derivation='None' name='[none:Climate Zone:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2068841146436657155]' derivation='Sum' name='[sum:Calculation_2068841146436657155:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2068841146637885444]' derivation='Sum' name='[sum:Calculation_2068841146637885444:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1abbkwf12dhwoo100k8ox0incbjb].[avg:Temperature:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1abbkwf12dhwoo100k8ox0incbjb].[sum:Calculation_2068841146637885444:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1abbkwf12dhwoo100k8ox0incbjb].[sum:Calculation_2068841146436657155:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1abbkwf12dhwoo100k8ox0incbjb].[avg:Temperature:qk]&quot;</bucket>
              <bucket>&quot;[federated.1abbkwf12dhwoo100k8ox0incbjb].[sum:Calculation_2068841146637885444:qk]&quot;</bucket>
              <bucket>&quot;[federated.1abbkwf12dhwoo100k8ox0incbjb].[sum:Calculation_2068841146436657155:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[mn:Date:ok]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Biome Type:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:City:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Climate Classification:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Climate Zone:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Country:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[yr:Date:ok]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1abbkwf12dhwoo100k8ox0incbjb].[:Measure Names]' value='107' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1abbkwf12dhwoo100k8ox0incbjb].[mn:Date:ok]</rows>
        <cols>[federated.1abbkwf12dhwoo100k8ox0incbjb].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{11C76235-C0EC-431F-8C97-2816F8AA9773}' />
    </worksheet>
    <worksheet name='Sheet 9'>
      <table>
        <view>
          <datasources>
            <datasource caption='Climate Change Data' name='federated.1abbkwf12dhwoo100k8ox0incbjb' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Month ' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;August&quot;'>
              <calculation class='tableau' formula='&quot;August&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1abbkwf12dhwoo100k8ox0incbjb'>
            <column datatype='string' name='[Biome Type]' role='dimension' type='nominal' />
            <column caption='Temperature Variability ' datatype='real' name='[Calculation_1173469246208176128]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='STDEV([Temperature])' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Climate Classification]' role='dimension' type='nominal' />
            <column datatype='string' name='[Climate Zone]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Current Month Temperature  Variability' datatype='real' name='[Current Month Temperature  (copy)_1173469246208573441]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATENAME(&apos;month&apos;, [Date]) = [Parameters].[Parameter 1] THEN &#13;&#10;{FIXED DATENAME(&apos;month&apos;, [Date]) : STDEV([Temperature])}&#13;&#10;END' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Previous Month TEMP variability ' datatype='real' name='[Previous Month Temperature (copy)_1173469246209179650]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATENAME(&apos;month&apos;, [Date]) = &#13;&#10;case [Parameters].[Parameter 1]&#13;&#10; &#13;&#10;WHEN &apos;January&apos; THEN &apos;December&apos; &#13;&#10;WHEN &apos;February&apos; THEN &apos;January&apos; &#13;&#10;WHEN &apos;March&apos; THEN &apos;February&apos; &#13;&#10;WHEN &apos;April&apos; THEN &apos;March&apos; &#13;&#10;WHEN &apos;May&apos; THEN &apos;April&apos; &#13;&#10;WHEN &apos;June&apos; THEN &apos;May&apos; &#13;&#10;WHEN &apos;July&apos; THEN &apos;June&apos; &#13;&#10;WHEN &apos;August&apos; THEN &apos;July&apos; &#13;&#10;WHEN &apos;September&apos; THEN &apos;August&apos; &#13;&#10;WHEN &apos;October&apos; THEN &apos;September&apos; &#13;&#10;WHEN &apos;November&apos; THEN &apos;October&apos; &#13;&#10;WHEN &apos;December&apos; THEN &apos;November&apos; &#13;&#10;END &#13;&#10;THEN {FIXED DATENAME(&apos;month&apos;, [Date]) : STDEV([Temperature])} &#13;&#10;END' />
            </column>
            <column datatype='real' name='[Temperature]' role='measure' type='quantitative' />
            <column-instance column='[Current Month Temperature  (copy)_1173469246208573441]' derivation='Avg' name='[avg:Current Month Temperature  (copy)_1173469246208573441:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Previous Month Temperature (copy)_1173469246209179650]' derivation='Avg' name='[avg:Previous Month Temperature (copy)_1173469246209179650:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Biome Type]' derivation='None' name='[none:Biome Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Climate Classification]' derivation='None' name='[none:Climate Classification:nk]' pivot='key' type='nominal' />
            <column-instance column='[Climate Zone]' derivation='None' name='[none:Climate Zone:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1173469246208176128]' derivation='User' name='[usr:Calculation_1173469246208176128:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Calculation_1173469246208176128:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1abbkwf12dhwoo100k8ox0incbjb].[avg:Previous Month Temperature (copy)_1173469246209179650:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1abbkwf12dhwoo100k8ox0incbjb].[avg:Current Month Temperature  (copy)_1173469246208573441:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Calculation_1173469246208176128:qk]&quot;</bucket>
              <bucket>&quot;[federated.1abbkwf12dhwoo100k8ox0incbjb].[avg:Previous Month Temperature (copy)_1173469246209179650:qk]&quot;</bucket>
              <bucket>&quot;[federated.1abbkwf12dhwoo100k8ox0incbjb].[avg:Current Month Temperature  (copy)_1173469246208573441:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[mn:Date:ok]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Biome Type:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:City:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Climate Classification:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Climate Zone:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Country:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[yr:Date:ok]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1abbkwf12dhwoo100k8ox0incbjb].[:Measure Names]' value='109' />
            <format attr='text-format' field='[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Calculation_1173469246208176128:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.1abbkwf12dhwoo100k8ox0incbjb].[avg:Previous Month Temperature (copy)_1173469246209179650:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.1abbkwf12dhwoo100k8ox0incbjb].[avg:Current Month Temperature  (copy)_1173469246208573441:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1abbkwf12dhwoo100k8ox0incbjb].[mn:Date:ok]</rows>
        <cols>[federated.1abbkwf12dhwoo100k8ox0incbjb].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{B4016D6F-1D5F-497F-9C3D-DF10C49B4995}' />
    </worksheet>
    <worksheet name='TEM'>
      <table>
        <view>
          <datasources>
            <datasource caption='Climate Change Data' name='federated.1abbkwf12dhwoo100k8ox0incbjb' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Month ' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;August&quot;'>
              <calculation class='tableau' formula='&quot;August&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1abbkwf12dhwoo100k8ox0incbjb'>
            <column caption='% Difference TEMP' datatype='real' name='[% Difference PCI (copy)_2068841146639802373]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(AVG([Calculation_2068841146436657155])-AVG([Calculation_2068841146637885444]))/AVG([Calculation_2068841146637885444])' />
            </column>
            <column caption='Good  Percentage TEMP ' datatype='string' name='[Bad Percentage TEMP (copy)_2068841146640683015]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [% Difference PCI (copy)_2068841146639802373] &gt; -0.03 AND  [% Difference PCI (copy)_2068841146639802373] &lt;0.03 &#13;&#10;THEN &#13;&#10;IF [% Difference PCI (copy)_2068841146639802373] &gt; 0 &#13;&#10;THEN &quot;â–² &quot; + STR(ROUND([% Difference PCI (copy)_2068841146639802373] * 100, 2)) + &quot;%&quot; &#13;&#10;ELSE &quot;â–¼ &quot; + STR(ROUND([% Difference PCI (copy)_2068841146639802373] * 100, 2)) + &quot;%&quot; &#13;&#10;END &#13;&#10;ELSE &#13;&#10;&quot;&quot; &#13;&#10;END' />
            </column>
            <column datatype='string' name='[Biome Type]' role='dimension' type='nominal' />
            <column caption='Current Month Temperature ' datatype='real' name='[Calculation_2068841146436657155]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATENAME(&apos;month&apos;, [Date]) = [Parameters].[Parameter 1] THEN &#13;&#10;{FIXED DATENAME(&apos;month&apos;, [Date]) : AVG([Temperature])}&#13;&#10;END' />
            </column>
            <column caption='Previous Month Temperature' datatype='real' name='[Calculation_2068841146637885444]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATENAME(&apos;month&apos;, [Date]) = &#13;&#10;case [Parameters].[Parameter 1]&#13;&#10; &#13;&#10;WHEN &apos;January&apos; THEN &apos;December&apos; &#13;&#10;WHEN &apos;February&apos; THEN &apos;January&apos; &#13;&#10;WHEN &apos;March&apos; THEN &apos;February&apos; &#13;&#10;WHEN &apos;April&apos; THEN &apos;March&apos; &#13;&#10;WHEN &apos;May&apos; THEN &apos;April&apos; &#13;&#10;WHEN &apos;June&apos; THEN &apos;May&apos; &#13;&#10;WHEN &apos;July&apos; THEN &apos;June&apos; &#13;&#10;WHEN &apos;August&apos; THEN &apos;July&apos; &#13;&#10;WHEN &apos;September&apos; THEN &apos;August&apos; &#13;&#10;WHEN &apos;October&apos; THEN &apos;September&apos; &#13;&#10;WHEN &apos;November&apos; THEN &apos;October&apos; &#13;&#10;WHEN &apos;December&apos; THEN &apos;November&apos; &#13;&#10;END &#13;&#10;THEN {FIXED DATENAME(&apos;month&apos;, [Date]) : AVG([Temperature])} &#13;&#10;END' />
            </column>
            <column caption='Bad Percentage TEMP' datatype='string' name='[Calculation_2068841146640363526]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [% Difference PCI (copy)_2068841146639802373] &gt;= 0.03 OR [% Difference PCI (copy)_2068841146639802373] &lt;= -0.03&#13;&#10;THEN &#13;&#10;IF [% Difference PCI (copy)_2068841146639802373] &gt; 0 &#13;&#10;THEN &quot;â–² &quot; + STR(ROUND([% Difference PCI (copy)_2068841146639802373] * 100, 2)) + &quot;%&quot; &#13;&#10;ELSE &quot;â–¼ &quot; + STR(ROUND([% Difference PCI (copy)_2068841146639802373] * 100, 2)) + &quot;%&quot; &#13;&#10;END &#13;&#10;ELSE &#13;&#10;&quot;&quot; &#13;&#10;END' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Climate Classification]' role='dimension' type='nominal' />
            <column datatype='string' name='[Climate Zone]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Temperature]' role='measure' type='quantitative' />
            <column-instance column='[Temperature]' derivation='Avg' name='[avg:Temperature:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Biome Type]' derivation='None' name='[none:Biome Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Climate Classification]' derivation='None' name='[none:Climate Classification:nk]' pivot='key' type='nominal' />
            <column-instance column='[Climate Zone]' derivation='None' name='[none:Climate Zone:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Bad Percentage TEMP (copy)_2068841146640683015]' derivation='User' name='[usr:Bad Percentage TEMP (copy)_2068841146640683015:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2068841146640363526]' derivation='User' name='[usr:Calculation_2068841146640363526:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[mn:Date:ok]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Biome Type:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:City:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Climate Classification:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Climate Zone:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Country:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[yr:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1abbkwf12dhwoo100k8ox0incbjb].[avg:Temperature:qk]' value='n#,##0.0&quot;Â°C&quot;;-#,##0.0&quot;Â°C&quot;' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[avg:Temperature:qk]' />
              <text column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Bad Percentage TEMP (copy)_2068841146640683015:nk]' />
              <text column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Calculation_2068841146640363526:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontname='Tableau Semibold' fontsize='12'> Temperature </run>
                <run>Ã†&#10;</run>
                <run fontcolor='#00eaea' fontname='Tableau Semibold' fontsize='20'><![CDATA[<[federated.1abbkwf12dhwoo100k8ox0incbjb].[avg:Temperature:qk]>]]></run>
                <run>Ã†&#10;</run>
                <run fontcolor='#00ad00' fontname='Tableau Bold' fontsize='12'><![CDATA[<[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Bad Percentage TEMP (copy)_2068841146640683015:nk]> ]]></run>
                <run fontname='Tableau Bold' fontsize='12'> vs Last Month</run>
                <run>Ã†&#10;</run>
                <run fontname='Tableau Bold' fontsize='12'><![CDATA[<[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Calculation_2068841146640363526:nk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{FA1B8D27-6385-4F10-A315-D610FB2FD855}' />
    </worksheet>
    <worksheet name='TEMP VAR'>
      <table>
        <view>
          <datasources>
            <datasource caption='Climate Change Data' name='federated.1abbkwf12dhwoo100k8ox0incbjb' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Month ' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;August&quot;'>
              <calculation class='tableau' formula='&quot;August&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1abbkwf12dhwoo100k8ox0incbjb'>
            <column caption='% Difference TEMP' datatype='real' name='[% Difference PCI (copy)_2068841146639802373]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(AVG([Calculation_2068841146436657155])-AVG([Calculation_2068841146637885444]))/AVG([Calculation_2068841146637885444])' />
            </column>
            <column caption='% Difference TEMP Variability ' datatype='real' name='[% Difference TEMP (copy)_1173469246210658307]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(AVG([Current Month Temperature  (copy)_1173469246208573441])-AVG([Previous Month Temperature (copy)_1173469246209179650]))/AVG([Previous Month Temperature (copy)_1173469246209179650])' />
            </column>
            <column caption='Bad Percentage TEMP VAR' datatype='string' name='[Bad Percentage TEMP (copy)_1173469246220693508]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [% Difference TEMP (copy)_1173469246210658307] &gt;= 0.01&#13;&#10;THEN &#13;&#10;IF [% Difference TEMP (copy)_1173469246210658307] &gt; 0 &#13;&#10;THEN &quot;â–² &quot; + STR(ROUND([% Difference TEMP (copy)_1173469246210658307] * 100, 2)) + &quot;%&quot; &#13;&#10;ELSE &quot;â–¼ &quot; + STR(ROUND([% Difference TEMP (copy)_1173469246210658307] * 100, 2)) + &quot;%&quot; &#13;&#10;END &#13;&#10;ELSE &#13;&#10;&quot;&quot; &#13;&#10;END' />
            </column>
            <column datatype='string' name='[Biome Type]' role='dimension' type='nominal' />
            <column caption='Temperature Variability ' datatype='real' name='[Calculation_1173469246208176128]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='STDEV([Temperature])' />
            </column>
            <column caption='Current Month Temperature ' datatype='real' name='[Calculation_2068841146436657155]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATENAME(&apos;month&apos;, [Date]) = [Parameters].[Parameter 1] THEN &#13;&#10;{FIXED DATENAME(&apos;month&apos;, [Date]) : AVG([Temperature])}&#13;&#10;END' />
            </column>
            <column caption='Previous Month Temperature' datatype='real' name='[Calculation_2068841146637885444]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATENAME(&apos;month&apos;, [Date]) = &#13;&#10;case [Parameters].[Parameter 1]&#13;&#10; &#13;&#10;WHEN &apos;January&apos; THEN &apos;December&apos; &#13;&#10;WHEN &apos;February&apos; THEN &apos;January&apos; &#13;&#10;WHEN &apos;March&apos; THEN &apos;February&apos; &#13;&#10;WHEN &apos;April&apos; THEN &apos;March&apos; &#13;&#10;WHEN &apos;May&apos; THEN &apos;April&apos; &#13;&#10;WHEN &apos;June&apos; THEN &apos;May&apos; &#13;&#10;WHEN &apos;July&apos; THEN &apos;June&apos; &#13;&#10;WHEN &apos;August&apos; THEN &apos;July&apos; &#13;&#10;WHEN &apos;September&apos; THEN &apos;August&apos; &#13;&#10;WHEN &apos;October&apos; THEN &apos;September&apos; &#13;&#10;WHEN &apos;November&apos; THEN &apos;October&apos; &#13;&#10;WHEN &apos;December&apos; THEN &apos;November&apos; &#13;&#10;END &#13;&#10;THEN {FIXED DATENAME(&apos;month&apos;, [Date]) : AVG([Temperature])} &#13;&#10;END' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Climate Classification]' role='dimension' type='nominal' />
            <column datatype='string' name='[Climate Zone]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Current Month Temperature  Variability' datatype='real' name='[Current Month Temperature  (copy)_1173469246208573441]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATENAME(&apos;month&apos;, [Date]) = [Parameters].[Parameter 1] THEN &#13;&#10;{FIXED DATENAME(&apos;month&apos;, [Date]) : STDEV([Temperature])}&#13;&#10;END' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Good  Percentage TEMP  VAR' datatype='string' name='[Good  Percentage TEMP  (copy)_1173469246221680645]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [% Difference TEMP (copy)_1173469246210658307] &lt; 0.01&#13;&#10;THEN &#13;&#10;IF [% Difference PCI (copy)_2068841146639802373] &gt; 0 &#13;&#10;THEN &quot;â–² &quot; + STR(ROUND([% Difference PCI (copy)_2068841146639802373] * 100, 2)) + &quot;%&quot; &#13;&#10;ELSE &quot;â–¼ &quot; + STR(ROUND([% Difference PCI (copy)_2068841146639802373] * 100, 2)) + &quot;%&quot; &#13;&#10;END &#13;&#10;ELSE &#13;&#10;&quot;&quot; &#13;&#10;END' />
            </column>
            <column caption='Previous Month TEMP variability ' datatype='real' name='[Previous Month Temperature (copy)_1173469246209179650]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATENAME(&apos;month&apos;, [Date]) = &#13;&#10;case [Parameters].[Parameter 1]&#13;&#10; &#13;&#10;WHEN &apos;January&apos; THEN &apos;December&apos; &#13;&#10;WHEN &apos;February&apos; THEN &apos;January&apos; &#13;&#10;WHEN &apos;March&apos; THEN &apos;February&apos; &#13;&#10;WHEN &apos;April&apos; THEN &apos;March&apos; &#13;&#10;WHEN &apos;May&apos; THEN &apos;April&apos; &#13;&#10;WHEN &apos;June&apos; THEN &apos;May&apos; &#13;&#10;WHEN &apos;July&apos; THEN &apos;June&apos; &#13;&#10;WHEN &apos;August&apos; THEN &apos;July&apos; &#13;&#10;WHEN &apos;September&apos; THEN &apos;August&apos; &#13;&#10;WHEN &apos;October&apos; THEN &apos;September&apos; &#13;&#10;WHEN &apos;November&apos; THEN &apos;October&apos; &#13;&#10;WHEN &apos;December&apos; THEN &apos;November&apos; &#13;&#10;END &#13;&#10;THEN {FIXED DATENAME(&apos;month&apos;, [Date]) : STDEV([Temperature])} &#13;&#10;END' />
            </column>
            <column datatype='real' name='[Temperature]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Biome Type]' derivation='None' name='[none:Biome Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Climate Classification]' derivation='None' name='[none:Climate Classification:nk]' pivot='key' type='nominal' />
            <column-instance column='[Climate Zone]' derivation='None' name='[none:Climate Zone:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Bad Percentage TEMP (copy)_1173469246220693508]' derivation='User' name='[usr:Bad Percentage TEMP (copy)_1173469246220693508:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1173469246208176128]' derivation='User' name='[usr:Calculation_1173469246208176128:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Good  Percentage TEMP  (copy)_1173469246221680645]' derivation='User' name='[usr:Good  Percentage TEMP  (copy)_1173469246221680645:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[mn:Date:ok]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Biome Type:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:City:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Climate Classification:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Climate Zone:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Country:nk]</column>
            <column>[federated.1abbkwf12dhwoo100k8ox0incbjb].[yr:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Calculation_1173469246208176128:qk]' value='n#,##0.0&quot;Â°C&quot;;-#,##0.0&quot;Â°C&quot;' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Calculation_1173469246208176128:qk]' />
              <text column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Bad Percentage TEMP (copy)_1173469246220693508:nk]' />
              <text column='[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Good  Percentage TEMP  (copy)_1173469246221680645:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontname='Tableau Semibold' fontsize='12'>Temperature Variability </run>
                <run>Ã†&#10;</run>
                <run fontcolor='#00eaea' fontname='Tableau Semibold' fontsize='20'><![CDATA[<[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Calculation_1173469246208176128:qk]>]]></run>
                <run>Ã†&#10;</run>
                <run fontcolor='#d60000' fontname='Tableau Semibold' fontsize='12'><![CDATA[<[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Bad Percentage TEMP (copy)_1173469246220693508:nk]>]]></run>
                <run fontcolor='#00ad00' fontname='Tableau Semibold' fontsize='12'><![CDATA[<[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Good  Percentage TEMP  (copy)_1173469246221680645:nk]> ]]></run>
                <run fontname='Tableau Semibold' fontsize='12'>vs Last Month </run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{90474BEE-AA97-4ADD-8EA1-10603BF4C6D0}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#4e79a7' fontname='Wide Latin' fontsize='20'>CLIMATE ANALYSIS DASHBOARD</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='800' maxwidth='1600' minheight='800' minwidth='1600' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Climate Change Data' name='federated.1abbkwf12dhwoo100k8ox0incbjb' />
      </datasources>
      <datasource-dependencies datasource='federated.1abbkwf12dhwoo100k8ox0incbjb'>
        <column datatype='string' name='[Biome Type]' role='dimension' type='nominal' />
        <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
        <column datatype='string' name='[Climate Classification]' role='dimension' type='nominal' />
        <column datatype='string' name='[Climate Zone]' role='dimension' type='nominal' />
        <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
        <column datatype='string' name='[Season]' role='dimension' type='nominal' />
        <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
        <column-instance column='[Biome Type]' derivation='None' name='[none:Biome Type:nk]' pivot='key' type='nominal' />
        <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
        <column-instance column='[Climate Classification]' derivation='None' name='[none:Climate Classification:nk]' pivot='key' type='nominal' />
        <column-instance column='[Climate Zone]' derivation='None' name='[none:Climate Zone:nk]' pivot='key' type='nominal' />
        <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
        <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
        <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='45' param='vert' type-v2='layout-flow' w='99000' x='500' y='1000'>
            <zone fixed-size='58' h='8250' id='46' is-fixed='true' type-v2='title' w='99000' x='500' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='89750' id='43' param='vert' type-v2='layout-flow' w='99000' x='500' y='9250'>
              <zone h='89750' id='31' param='horz' type-v2='layout-flow' w='99000' x='500' y='9250'>
                <zone h='89750' id='15' param='horz' type-v2='layout-flow' w='89000' x='500' y='9250'>
                  <zone h='89750' id='13' type-v2='layout-basic' w='89000' x='500' y='9250'>
                    <zone h='24378' id='5' param='vert' type-v2='layout-flow' w='89000' x='500' y='9250'>
                      <zone h='24378' id='8' param='horz' type-v2='layout-flow' w='89000' x='500' y='9250'>
                        <zone h='24378' id='10' name='TEM' show-title='false' w='17800' x='500' y='9250'>
                          <layout-cache cell-count-w='1' type-h='cell' type-w='cell' />
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='24378' id='11' name='TEMP VAR' show-title='false' w='17800' x='18300' y='9250'>
                          <layout-cache cell-count-w='1' type-h='cell' type-w='cell' />
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='24378' id='12' name='PCI' show-title='false' w='17800' x='36100' y='9250'>
                          <layout-cache cell-count-w='1' type-h='cell' type-w='cell' />
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='24378' id='17' name='AQI' show-title='false' w='17800' x='53900' y='9250'>
                          <layout-cache cell-count-w='1' type-h='cell' type-w='cell' />
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='24378' id='18' name='EWE' show-title='false' w='17800' x='71700' y='9250'>
                          <layout-cache cell-count-w='1' type-h='cell' type-w='cell' />
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                      </zone>
                    </zone>
                    <zone h='32684' id='19' param='horz' type-v2='layout-flow' w='89000' x='500' y='33628'>
                      <zone fixed-size='651' h='32684' id='20' is-fixed='true' name='Sheet 11' w='41188' x='500' y='33628'>
                        <layout-cache minwidth='202' type-h='fixed' type-w='scalable' />
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='32684' id='22' param='horz' type-v2='layout-flow' w='47812' x='41688' y='33628'>
                        <zone h='32684' id='23' name='Monthly Temperature Trends ' w='47812' x='41688' y='33628'>
                          <layout-cache cell-count-w='12' minheight='182' non-cell-size-w='2' type-h='scalable' type-w='cell' />
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                      </zone>
                    </zone>
                    <zone h='32688' id='24' name='EWE by Season ' w='28881' x='500' y='66312'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='32688' id='25' name='Sheet 14' w='26782' x='29381' y='66312'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='32688' id='29' name='Sheet 15' w='33337' x='56163' y='66312'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
                <zone fixed-size='160' h='89750' id='30' is-fixed='true' param='vert' type-v2='layout-flow' w='10000' x='89500' y='9250'>
                  <zone fixed-size='95' h='11562' id='32' is-fixed='true' mode='checkdropdown' name='Sheet 15' param='[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Country:nk]' type-v2='filter' values='cascading' w='10000' x='89500' y='9250'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone fixed-size='81' h='11125' id='33' is-fixed='true' mode='checkdropdown' name='Sheet 15' param='[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:City:nk]' type-v2='filter' values='cascading' w='10000' x='89500' y='20812'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone fixed-size='83' h='11375' id='34' is-fixed='true' mode='checkdropdown' name='Sheet 15' param='[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Climate Classification:nk]' type-v2='filter' values='database' w='10000' x='89500' y='31937'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone fixed-size='76' h='10500' id='35' is-fixed='true' mode='checkdropdown' name='Sheet 15' param='[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Climate Zone:nk]' type-v2='filter' values='database' w='10000' x='89500' y='43312'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone fixed-size='83' h='11375' id='36' is-fixed='true' mode='checkdropdown' name='Sheet 15' param='[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Season:nk]' type-v2='filter' values='database' w='10000' x='89500' y='53812'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone fixed-size='79' h='10875' id='37' is-fixed='true' mode='checkdropdown' name='Sheet 15' param='[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Biome Type:nk]' type-v2='filter' values='database' w='10000' x='89500' y='65187'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone fixed-size='83' h='11375' id='38' is-fixed='true' mode='checkdropdown' name='Sheet 15' param='[federated.1abbkwf12dhwoo100k8ox0incbjb].[yr:Date:ok]' type-v2='filter' values='database' w='10000' x='89500' y='76062'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone fixed-size='108' h='11563' id='39' is-fixed='true' mode='checkdropdown' name='Sheet 15' param='[federated.1abbkwf12dhwoo100k8ox0incbjb].[mn:Date:ok]' type-v2='filter' values='database' w='10000' x='89500' y='87437'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run fontalignment='1' fontcolor='#4e79a7' fontname='Wide Latin' fontsize='20'>CLIMATE ANALYSIS DASHBOARD</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='2850' minheight='2850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='66' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='65' param='vert' type-v2='layout-flow' w='99000' x='500' y='1000'>
                <zone fixed-size='58' h='8250' id='46' type-v2='title' w='99000' x='500' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='187' h='24378' id='10' is-fixed='true' name='TEM' show-title='false' w='17800' x='500' y='9250'>
                  <layout-cache cell-count-w='1' type-h='cell' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='187' h='24378' id='11' is-fixed='true' name='TEMP VAR' show-title='false' w='17800' x='18300' y='9250'>
                  <layout-cache cell-count-w='1' type-h='cell' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='187' h='24378' id='12' is-fixed='true' name='PCI' show-title='false' w='17800' x='36100' y='9250'>
                  <layout-cache cell-count-w='1' type-h='cell' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='187' h='24378' id='17' is-fixed='true' name='AQI' show-title='false' w='17800' x='53900' y='9250'>
                  <layout-cache cell-count-w='1' type-h='cell' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='187' h='24378' id='18' is-fixed='true' name='EWE' show-title='false' w='17800' x='71700' y='9250'>
                  <layout-cache cell-count-w='1' type-h='cell' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='253' h='32684' id='20' is-fixed='true' name='Sheet 11' w='41188' x='500' y='33628'>
                  <layout-cache minwidth='202' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='253' h='32684' id='23' is-fixed='true' name='Monthly Temperature Trends ' w='47812' x='41688' y='33628'>
                  <layout-cache cell-count-w='12' minheight='182' non-cell-size-w='2' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='254' h='32688' id='24' is-fixed='true' name='EWE by Season ' w='28881' x='500' y='66312'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='254' h='32688' id='25' is-fixed='true' name='Sheet 14' w='26782' x='29381' y='66312'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='95' h='11562' id='32' mode='checkdropdown' name='Sheet 15' param='[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Country:nk]' type-v2='filter' values='cascading' w='10000' x='89500' y='9250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='81' h='11125' id='33' mode='checkdropdown' name='Sheet 15' param='[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:City:nk]' type-v2='filter' values='cascading' w='10000' x='89500' y='20812'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='83' h='11375' id='34' mode='checkdropdown' name='Sheet 15' param='[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Climate Classification:nk]' type-v2='filter' values='database' w='10000' x='89500' y='31937'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='76' h='10500' id='35' mode='checkdropdown' name='Sheet 15' param='[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Climate Zone:nk]' type-v2='filter' values='database' w='10000' x='89500' y='43312'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='83' h='11375' id='36' mode='checkdropdown' name='Sheet 15' param='[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Season:nk]' type-v2='filter' values='database' w='10000' x='89500' y='53812'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='79' h='10875' id='37' mode='checkdropdown' name='Sheet 15' param='[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Biome Type:nk]' type-v2='filter' values='database' w='10000' x='89500' y='65187'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='83' h='11375' id='38' mode='checkdropdown' name='Sheet 15' param='[federated.1abbkwf12dhwoo100k8ox0incbjb].[yr:Date:ok]' type-v2='filter' values='database' w='10000' x='89500' y='76062'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='108' h='11563' id='39' mode='checkdropdown' name='Sheet 15' param='[federated.1abbkwf12dhwoo100k8ox0incbjb].[mn:Date:ok]' type-v2='filter' values='database' w='10000' x='89500' y='87437'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='254' h='32688' id='29' is-fixed='true' name='Sheet 15' w='33337' x='56163' y='66312'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{46B1BA54-43FB-4BCE-8429-5CBE27F38486}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.1abbkwf12dhwoo100k8ox0incbjb].[:Measure Names]</field>
            <field>[federated.1abbkwf12dhwoo100k8ox0incbjb].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8C896A93-BFA6-427B-B333-83D7F575F6A3}' />
    </window>
    <window class='worksheet' name='EWE'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1abbkwf12dhwoo100k8ox0incbjb].[sum:Calculation_1170091545210150913:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Calculation_1170091545305280518:nk]</field>
            <field>[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Calculation_1170091545307086855:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A4DB7FDB-A6F6-4013-ABBF-7EB32C4B4F11}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Calculation_1170091545308565512:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1abbkwf12dhwoo100k8ox0incbjb].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C56974DF-252A-4BD5-A73D-1FB321FB7FCF}' />
    </window>
    <window class='worksheet' name='AQI'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Bad Percentage AQI (copy)_1170091545321873422:nk]</field>
            <field>[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Calculation_1170091545319485453:nk]</field>
            <field>[federated.1abbkwf12dhwoo100k8ox0incbjb].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F89BB94E-F394-4498-B5FA-5AC22CB7B896}' />
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1abbkwf12dhwoo100k8ox0incbjb].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{F1B2CFB8-2B02-4AEE-8C5D-0F355AC4440E}' />
    </window>
    <window class='worksheet' name='PCI'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Bad Percentage AQI (copy)_2068841146409336833:nk]</field>
            <field>[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Good Percentage AQI  (copy)_2068841146410987522:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5ECD7A77-1A08-4E69-8440-BDCF55577CF7}' />
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1abbkwf12dhwoo100k8ox0incbjb].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{04563F18-BF92-40A6-863A-6FA1092002C8}' />
    </window>
    <window class='worksheet' name='TEM'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Bad Percentage TEMP (copy)_2068841146640683015:nk]</field>
            <field>[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Calculation_2068841146640363526:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8D92FA4E-CA9B-4D93-9CBC-7059F2670485}' />
    </window>
    <window class='worksheet' name='Sheet 9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1abbkwf12dhwoo100k8ox0incbjb].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4A991B45-031D-4018-A26F-C242A27A35C5}' />
    </window>
    <window class='worksheet' name='TEMP VAR'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Bad Percentage TEMP (copy)_1173469246220693508:nk]</field>
                  <field>[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Calculation_1173469246208176128:qk]</field>
                  <field>[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Good  Percentage TEMP  (copy)_1173469246221680645:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;&quot;</value>
                <value>15.852706158454323</value>
                <value>&quot;â–¼ -2.20\%&quot;</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Bad Percentage TEMP (copy)_1173469246220693508:nk]</field>
            <field>[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Good  Percentage TEMP  (copy)_1173469246221680645:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FCD50F2B-4EB9-4AD6-804E-BF0C6E872226}' />
    </window>
    <window class='worksheet' name='Sheet 11'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1abbkwf12dhwoo100k8ox0incbjb].[avg:Temperature:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A6B92B72-7C1C-441E-B0A8-9FD7CF973314}' />
    </window>
    <window class='worksheet' name='Monthly Temperature Trends '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1abbkwf12dhwoo100k8ox0incbjb].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8A98ACC6-7A88-42FE-9B5E-1711D128AD4D}' />
    </window>
    <window class='worksheet' name='EWE by Season '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Season:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{691F5E59-C349-4F81-A2D8-6FE6CBAAC40A}' />
    </window>
    <window class='worksheet' name='Sheet 14'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Climate Zone:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1abbkwf12dhwoo100k8ox0incbjb].[mn:Date:ok]</field>
            <field>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Climate Zone:nk]</field>
            <field>[federated.1abbkwf12dhwoo100k8ox0incbjb].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{465016E6-29DB-46E2-8602-49228D2D38D2}' />
    </window>
    <window class='worksheet' name='Sheet 15'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Country:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.1abbkwf12dhwoo100k8ox0incbjb].[sum:Population Exposure:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Country:nk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Biome Type:nk]</field>
            <field>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:City:nk]</field>
            <field>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Climate Classification:nk]</field>
            <field>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Climate Zone:nk]</field>
            <field>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Country:nk]</field>
            <field>[federated.1abbkwf12dhwoo100k8ox0incbjb].[none:Season:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E6282901-2DC4-4C4D-B65A-0427CE9EE33C}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='AQI'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1abbkwf12dhwoo100k8ox0incbjb].[avg:Calculation_1170091545315459081:qk]</field>
                    <field>[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Bad Percentage AQI (copy)_1170091545321873422:nk]</field>
                    <field>[federated.1abbkwf12dhwoo100k8ox0incbjb].[usr:Calculation_1170091545319485453:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>252.56989247311287</value>
                  <value>&quot;â–¼ 1.88\%&quot;</value>
                  <value>&quot;&quot;</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='EWE'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='EWE by Season '>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Monthly Temperature Trends '>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='PCI'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 11'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='16' />
        </viewpoint>
        <viewpoint name='Sheet 14'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 15'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='TEM'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='TEMP VAR'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='25' />
      <simple-id uuid='{CDCE15C8-EFC6-4543-ABB5-09DB88BCFBD8}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='AQI' width='192'>
      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
      XFYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='EWE' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='EWE by Season ' width='192'>
      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
      iv4ffUwvx/POzCoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Monthly Temperature Trends ' width='192'>
      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
      hZFYliJ3iufWv8XFF36fxqK8XFdbHIAct8dg6dEnkE2leWntq9hVkq6BfrA4OWnRCdRXNVKY
      X0iev5C1rTu4/vKbZeefASQABy3Nw0/dy5PP/5WmxhaS6TSD/a2sWvMcN/7uRgaCQ8yfv4xT
      jz+JBdWl3PBfP2D7UDjXlRYfQVO7Ho0SCoXw+XyHtJD4gEFoawbtsL69t8LYNfRB0zSUUnt6
      fXY/XUbTtD2/2/176Rma3uQc4KBp6HvN6tp7x/7gTi47/swhTSBhahIAYWoSAGFqEgBhahIA
      YWoSAGFqEgBhahIAYWoSAGFqEgBhahIAYWoSAGFqEgBhahIAYWoSAGFqEgBhahIAYWoSAGFq
      EgBhahIAYWoSAGFqEgBhahIAYWoSAGFqEgBhahIAYWoSAGFqEgBhahIAYWoSAGFqEgBhahIA
      YWoSAGFqEgBhahIAYWoSAGFqEgBhahIAYWoSAGFqEgBhahIAYWoSAGFqEgBhahIAYWoSAGFq
      1t3fxOPxQ16IYVXYmkE71NcbBrqeuyzmsnylFACadqhrb3xy+95BodBz9N5hrwC4XC58Pl9O
      KiEBMGsAcvveYYxNoP7+/smpxIE2gFK8+87btHV07/lRMBBATVX5e+nYsZ1URjHYu5OhUGK/
      f5NKxojFUwddtqZpY9sBjDStbTv/+edKEQ5HGBoaOvhlcfDvfbf2tu1kDUV/104Ckf2vg4M1
      5vfOxO+D1o/+k/f19HbjtGns6OyjsrKEzs4B8otLsWppQMPrsLCzs5/qmkq6+gbwuD2U5tnJ
      uIvxOy2HWEVFJJGiudpH545WgnGF3Yizs6OD8qoKejv7yMv3UVXsYyBqEBnqweUrIRHqQ7c5
      KS6rJhYOUlFRdojlvy8WHKLXkU+svwuLz8lgVxsufxHpUD8uXyFDQ8MUFubR3TVMSWUF9dXl
      4y7zgwKDfYyMjBCvqmTb5g04vMW4rRmyuhOrxUI4NEJRUdGEl7tbIjxA10ARgd4O/Djp27kd
      t9+PrtvRSFNZUTlpZQP0dveQSWfwuexE0in6eocpKCklGxsmrbuY3Vg3puUddPyVUuiaTjAQ
      JBkapm8kREVtI0YyTigUYiQQIBAIkgz10DsYpaiiijxrli1dI+Q5xnmIVQqFQXv7DjLpNFan
      l1l1ZfQODFJQXEU6ESGTjDE8Mkwskaa7uwtDt9NQV01n6yYMq2t85e9izyskNrgTu8tHJhYm
      msrQ1d1NVrfhzCQob5qNz+OirrEZlRrfp+OH6eruQTcSdHQP4isoQWUSxJMZaqrKCIcjk1Lm
      3hx5JUT7tuLwFpKJhYikDLp6BomHB4nF05NatlIKTdcJhUIkohEi8TiVtY1kEwHa27pJpcZe
      /kEfAYb6uvAVluKxGXgLSyguLMLtsmHX8gkOJYlmrXg8DhJFlRQVF+BxO7G7S+kOdIzzJEej
      rqGRfJ+P5qZGQikdn8fK9u4ATXU1KGXD5ypmR08/JaUVjBhpCvPy8Xmc6FYHWWWhonhizm0K
      CopIOx14/PnE42kG+jMUFfvxe5z4fR62bm2lqLQMj9uB3VowIWV+UHlNI0WFBQwODLJtazu1
      zfNxOyzomk5JcRGQnZRydysoKCTpdOD1+UglM6QyfXhKinGkghgFJZNadl/XDgrLKnCSpG8w
      SHl1JU6HDZtWhkXTMKyeMS/z/wPse9CT70OigAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='PCI' width='192'>
      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
      WIyV2QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 11' width='192'>
      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
      HbLXa78qlrgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 14' width='192'>
      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
      pcigigAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 15' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 8' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 9' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOyddZhd1bn/P/v4nDNHxt01GYm7GyQhAQIEp1CX25Zbpbf93RZKqdJbA4oU
      EiDuOkmIu8skYxl31zNnjp+9f39MiLQBJoEkMLM/z5PnyeyzZa2913fJu971LkGSJAkZmQGK
      4k4nQEbmTiILQGZAIwtAZkAjC0BmQCMLQGZAIwtAZkAjC0BmQCMLQGZAIwtAZkAjC0BmQCML
      QGZAIwtAZkAjC0BmQCMLQGZAIwtAZkAjC0BmQCMLQGZAIwtAZkAjC0BmQKO60wn4vOO1tVBU
      Xovbe2XptM4YSmJiNDrlHUzY5w1JpKu5iqpGG+GJ6YQa1Z/JbZ3tNRRUtgCg0BiIjo8n2F97
      0/ezt1ZS260nISEUNXIL8In4nN3UVFWSv3cFL/1pCbkVFdQ1tuER73TKruB2VLDqvU00dXvu
      WBokn4fdq97hjVf/wJpjNfg+o/s2n1zF717bSH55Gad3reGVN1ZR57j5+9UcXMzLb+6h69Lf
      cgvwCWiDE5kzP5H2kz0crncx58EHCQckSaKt9iKl1a3gF0x6ehJmPw9l50uQ9AbaW5rAGEVK
      mEBFWR2SMYJBqXH4OqopbfNg9HTSbBeISU4nKsgfBR6qCy9Q027HPzSetMRIVI42iiq6iE8J
      pLKkhpCEQSg7yimrbcWDhtC4FFKDleSdOcSWTYeQAo0MSk8jMUxBRZWDtPQ4NCoHRecqCUtN
      Q2ovpUUMIUzdSUWbksyMaNorLlJa34HOEkFaagL+mpurEz2uJvLrvSy8bzpbjh+na3ICAWI7
      +WVtxKWlYlSLdNZcpFERSWqkkY66EkqrWxEMZixqf2IGx+N33TsrCEsYwfwH52Py1vHqz37H
      kYI5TDDX4zYn0NFUR2JKOgprJRdL6/CojCSlpRKo6KaosouEwckYFF5aK0ro0EUTN/5xvpag
      xQhIXqfcAtwsYmch77y1lvKmDvIPrGXxtjOItLD6//6PtfvzaWso4f1X/sTGoyW0dzaz7PV/
      cLamndozOfzl1WVUtVqpOr+bv769gW6Xm6azW3h3y0larZ3sXfk2O3LrsNee4fW/L2FbzjLe
      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
      FzJT/WVKsNreAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='TEM' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAF40lEQVR4nO3Za4iUVQDG8eednctex93W9Zr3VkkLpAUlI1ESN5KKblZEmCRSiWFYBBVE
      hYWRIaJ5ARFFCSkDSSTLBA0UUovCSE3ddfOWl73p7HXeefuwsiF+rVzm+f++zTnDe86H+cOZ
      9wRRFEUCTMVu9QaAW4kAYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0A
      YI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0A
      YI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0A
      YI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0A
      YI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYC1+qzcA
      /Du69cWGDdq5d78mT63V3DlPq62lSSXpcoVd7QrDSEFBXNmuDhWX9VNnW0a5MCQA5IuEnpoz
      V7+eaNCLc57VD19v0bHLHerIJjQgOqOW5DAd+elHTRw7RCXV03Rq31YNHzeBIxDy08+HD6n1
      akYV6bTCgoRmzHpMgwdW6eEHp6ml5apSpRWa/dzzBID8ku6XVhBIM2pnqqutTQWJhEpLyhSP
      BSpLp1UQT6qkKKXO1itatXy5giiKolu9aeD/ldOyjz7UgjfeIQB44wgEawQAa7wGRd66EIZK
      BDFVxgI15kIdC3M3zNfE4wSA/NOSC/VxJqM1HZ1a169CTyTjashmtbGzS5J0PsxqXyjV31ZO
      AMg/Z8NQNclCTeru7h2bmExpTTKlKIq0qLVFYwpTSgcBASD/jE8kNV6RNrXdPFeX7db2bE77
      ygoViD/BcBJFejdzTfOLSzQ8FkgiAOShjihScy5SdyRlokituZ6rrhPZLu0NpXmp5PVvRlyE
      If983p7R2s5/zv+3FyS0ubRY69szag4SWlyUuj5DADDHEQjWCADWeA2KviOKdDpzXK1hV+/Q
      wKIRGpBM/2dLEgD6lK0nP9CbJ7dc/1SoPQ+c6A0gF2a0vm61jrc3at6YxRpXXKmu7staeXK1
      LoXSwurXdOTiV9rddEwvjH5VdY07dDJbqpeGP6TvLh3SrEHTb1qPIxD6jiDQnFEvqzTo+Vne
      1f8R3Z8e0judi7KaMvBJ1ab7a+PZ3b1js4bN1x2xy9p2fpdWNuzRwhGztOToUu1qqldr5qB2
      ntuha2GnWsNsz4OiSOtWfKrLzY0EgL5lYHqKZg+okRTTgtELFQ8C5XLt+uT3t3U406QjFz/X
      2r/+0KKRj0qSUolKfXt6qfZ39tPsqmqlElWqSg1SR9ipuwuTuhJKdVd/08GmA1pydFXPIkGg
      4f2T+mbX9wSAvibQK2MWanDxPXpm8BRJUixWpNfvXKKx8Wa9f2qbZg6YpPq2M1px7D0dvrRT
      ay/8ovsqRutiWKqysE7LTnymmsrpmlf9liaUjFLtoKlqyzarKF7Wu0rN5Hv15eZN3AOg7wnD
      Vm2/cECPD629Ybw7vKbj1+oVSaosHKrubJPKE+VqaD8nSRpUNFIlQVYNHY0aUzpKBcrqUtdV
      VSXL9WdbnaqKRqooVtDzsFxW9Q1nCADeOALBGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHA
      GgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHA
      GgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHA
      GgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHA
      GgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHA2t/Z
      JHNeYHKnMAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='TEMP VAR' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAGzklEQVR4nO3a3W9bdx3H8c85duykSfPg2HGypHGbdG0ZpS0gSDdalYd1MK10DEFVTRob
      E0gICSTEDRcglYuJCxCCP6BDrB0aDxdbaVc29sDYCi1QbV2rdetakbZplpY4TdI4DbbjHxdk
      Y9wgNMFi5fN+XflBto+l8/b5/s5xFEIIAkzFi70BwGJKvnnjRPG6Zqu1xdwW4F33VgCz1ZpK
      BAAzjECwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCw
      RgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCw
      RgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCw
      RgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCw
      RgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwllzsDQDe7lpxTDPTM5JiZXr7lU79r3bR
      oOni39TSkVMcR289SgCoKzMTV/S7Rx5SbuM2DWW7NXLqmBKtvcpn0hq5OKpyJag5XVOyrVeN
      oaSrVyeVXJZVYbBff33pmJIdfcpnGjU+UVJQpGiuqImpitasX6Nf/egBbfjk3Sr0t6uxc5Wm
      Lp4hANSXnhs3qHfFCq0a2qqp15/X0RdeU+XqY9p86yf06vC0dPmEBj/6OZ169BGt7l2uatf7
      NPLbh1Ua2qCTL1/Q7OVf62OfvU3PPXVCO+67V2PnT+rcS3/WbEirpa1N+b4+nT9+QJkP3a3T
      Tz/OGgD16/r0lFoy3dp8x11KJaRMb0FtnR3qGVinZFyTlFC+MKjmZSnNTE6qJdujW+7YqWQc
      aeWmm5VbPq8X//SKct1dKleCljU3q72rS1JQrVpRpVIhANSf/Oqb1NyY0sDNt6stOaOR4Ytq
      zvWquzun7tXrlU4ltPI96yXN6/jjv1Dne7fog7feqeWa1qULo2rO9KjnhpyUateqlTlFLXnl
      uzu18SNbdOyJwyps3KKzRw6ro3+NohBCkKQ/Xi6pVK0t8lcH/nuvH3lSrWs3K59tfcfvQQCw
      xggEawQAa5wGxZI1oZqSitSqSFLQSBQ0vfBcStJgiAkAS09JQT9PVHQwrukb1ZS2hkhB0veT
      ZWVrCbVKag+RBggAS9F4VNONtYTWRf9+UmdM0nfmk8qKv0JgCSuEhAoKeuptO3pZQb0h1i8T
      Vf1d0odrCW3mCAAXacX6YTWloKDJqKZ7kmXtr6QJAEtPWUFlSVUFzUmaVdBkFPSagj4QYp2L
      gpoVKS1GICxBL8TzOhTPS4r0m0RFx0Osr80nNZyY1+GoqtYQa0+1QU3iSjDMcSEM1ggA1lgD
      oK6UysN6onhQbw7j6USXPpX7vBqi6D++7p0iANSVpmSHnh77gc6UJyRJW3Lf0o7cv3b+05MH
      9NzkUc2pUV8tfFupKNax8Z/qxdJphbhPu7Nb9ZM39qoh7tSu/J362eheDWW/pFT1Va1o3al8
      Q5NCrapyeV4NDQlGINSXOG7Tp7t2Ldxr0I78FxRFUghBIQQNLN+u+/q+rtnKqOb/ef5Gmzp2
      aXf3FzVRHtbR4n5t7/mu1qZiPTl+UEOdu3Xm2jM6d/28jkwc0HwIqpWndGjffo29/CwBoP5s
      zd2vzjitgeWf0fuX9UqSLpR+r4ff2KvxuZP68fD3dG//A2qKE5KkkdIzenB0n77Sv0fSQiyS
      1rXfpUulP6gl0a6ZWlk5XdH5yjUl0hk1xbN65dRZRiDUn+aGtdqe+bi62u9XvDD7F1q2qdCy
      TY9e/KZCnNChKw/q9swtev7aJZVKBxUnbtBjlx/Szuw92je6R8k4qy8336TuqKjJaIWKM4d0
      4npRm7JNUhRpcLBPfzld5DoA6tPE3FmlUqvUsvAr///CEQB1KdO4+l35HNYAsEYAsEYAsEYA
      sEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYA
      sEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYA
      sEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYA
      sEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYA
      sEYAsEYAsEYAsEYAsEYAsPYP4KKrISzKxc0AAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
